ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	ADC_SAR_Seq_initVar
  18              		.bss
  19              		.type	ADC_SAR_Seq_initVar, %object
  20              		.size	ADC_SAR_Seq_initVar, 1
  21              	ADC_SAR_Seq_initVar:
  22 0000 00       		.space	1
  23              		.comm	ADC_SAR_Seq_offset,2,4
  24              		.comm	ADC_SAR_Seq_countsPer10Volt,4,4
  25              		.section	.rodata
  26              		.align	2
  27              		.type	ADC_SAR_Seq_channelsConfig, %object
  28              		.size	ADC_SAR_Seq_channelsConfig, 4
  29              	ADC_SAR_Seq_channelsConfig:
  30 0000 00010000 		.word	256
  31              		.section	.text.ADC_SAR_Seq_Start,"ax",%progbits
  32              		.align	2
  33              		.global	ADC_SAR_Seq_Start
  34              		.code	16
  35              		.thumb_func
  36              		.type	ADC_SAR_Seq_Start, %function
  37              	ADC_SAR_Seq_Start:
  38              	.LFB2:
  39              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * File Name: ADC_SAR_Seq.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #include "ADC_SAR_Seq.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 2


  19:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint8 ADC_SAR_Seq_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int16 ADC_SAR_Seq_offset[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** volatile int32 ADC_SAR_Seq_countsPer10Volt[ADC_SAR_Seq_TOTAL_CHANNELS_NUM];   /* Gain compensation 
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /* Channels configuration generated by customiser */
  33:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** static const uint32 CYCODE ADC_SAR_Seq_channelsConfig[] = { 0x00000100u };
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Start
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  to zero before call of ADC_SAR_Seq_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Init() and ADC_SAR_Seq_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start() routine.
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Start(void)
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(ADC_SAR_Seq_initVar == 0u)
  48              		.loc 1 66 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 3


  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_Init();
  53              		.loc 1 68 0
  54 000c FFF7FEFF 		bl	ADC_SAR_Seq_Init
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_initVar = 1u;
  55              		.loc 1 69 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		mov	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_Enable();
  60              		.loc 1 71 0
  61 0016 FFF7FEFF 		bl	ADC_SAR_Seq_Enable
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
  62              		.loc 1 72 0
  63 001a BD46     		mov	sp, r7
  64              		@ sp needed
  65 001c 80BD     		pop	{r7, pc}
  66              	.L4:
  67 001e C046     		.align	2
  68              	.L3:
  69 0020 00000000 		.word	ADC_SAR_Seq_initVar
  70              		.cfi_endproc
  71              	.LFE2:
  72              		.size	ADC_SAR_Seq_Start, .-ADC_SAR_Seq_Start
  73              		.global	__aeabi_idiv
  74              		.section	.text.ADC_SAR_Seq_Init,"ax",%progbits
  75              		.align	2
  76              		.global	ADC_SAR_Seq_Init
  77              		.code	16
  78              		.thumb_func
  79              		.type	ADC_SAR_Seq_Init, %function
  80              	ADC_SAR_Seq_Init:
  81              	.LFB3:
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Init
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Start().
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  90:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 4


  91:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  The ADC_SAR_Seq_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Init(void)
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
  82              		.loc 1 95 0
  83              		.cfi_startproc
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 84B0     		sub	sp, sp, #16
  89              		.cfi_def_cfa_offset 24
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         static const uint8 CYCODE ADC_SAR_Seq_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_9_PIN
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 5


 138:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ,(uint8)(ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (uint8)ADC_SAR_Seq_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         };
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyIntSetPriority(ADC_SAR_Seq_INTC_NUMBER, ADC_SAR_Seq_INTC_PRIOR_NUMBER);
  92              		.loc 1 172 0
  93 0006 0F20     		mov	r0, #15
  94 0008 0321     		mov	r1, #3
  95 000a FFF7FEFF 		bl	CyIntSetPriority
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (void)CyIntSetVector(ADC_SAR_Seq_INTC_NUMBER, &ADC_SAR_Seq_ISR);
  96              		.loc 1 173 0
  97 000e 554B     		ldr	r3, .L17
  98 0010 0F20     		mov	r0, #15
  99 0012 191C     		mov	r1, r3
 100 0014 FFF7FEFF 		bl	CyIntSetVector
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif   /* End ADC_SAR_Seq_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = ADC_SAR_Seq_DEFAULT_EN_CHANNELS;
 101              		.loc 1 177 0
 102 0018 534B     		ldr	r3, .L17+4
 103 001a 0122     		mov	r2, #1
 104 001c 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         (((ADC_SAR_Seq_PUMP_CTRL_REG & ADC_SAR_Seq_PUMP_CTRL_ENABLED) != 0u) ? 
 105              		.loc 1 180 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 6


 106 001e 534B     		ldr	r3, .L17+8
 107 0020 1B68     		ldr	r3, [r3]
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 108              		.loc 1 178 0
 109 0022 002B     		cmp	r3, #0
 110 0024 01DA     		bge	.L6
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 111              		.loc 1 178 0 is_stmt 0 discriminator 1
 112 0026 5249     		ldr	r1, .L17+12
 113 0028 00E0     		b	.L7
 114              	.L6:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0 discriminator 2
 116 002a 5249     		ldr	r1, .L17+16
 117              	.L7:
 178:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 discriminator 4
 119 002c 524B     		ldr	r3, .L17+20
 120 002e 524A     		ldr	r2, .L17+20
 121 0030 1268     		ldr	r2, [r2]
 122 0032 0A43     		orr	r2, r1
 123 0034 1A60     		str	r2, [r3]
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_CTRL_REG_CFG;
 124              		.loc 1 182 0 is_stmt 1 discriminator 4
 125 0036 514B     		ldr	r3, .L17+24
 126 0038 514A     		ldr	r2, .L17+28
 127 003a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG = ADC_SAR_Seq_DEFAULT_RANGE_THRES_REG_CFG;
 128              		.loc 1 183 0 discriminator 4
 129 003c 514B     		ldr	r3, .L17+32
 130 003e 524A     		ldr	r2, .L17+36
 131 0040 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_COND_REG  = ADC_SAR_Seq_COMPARE_MODE;
 132              		.loc 1 184 0 discriminator 4
 133 0042 524B     		ldr	r3, .L17+40
 134 0044 0022     		mov	r2, #0
 135 0046 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME01_REG_CFG;
 136              		.loc 1 185 0 discriminator 4
 137 0048 514B     		ldr	r3, .L17+44
 138 004a 524A     		ldr	r2, .L17+48
 139 004c 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_DEFAULT_SAMPLE_TIME23_REG_CFG;
 140              		.loc 1 186 0 discriminator 4
 141 004e 524B     		ldr	r3, .L17+52
 142 0050 504A     		ldr	r2, .L17+48
 143 0052 1A60     		str	r2, [r3]
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_MUX_SWITCH0_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /*ADC_SAR_Seq_CHANNELS_MODE !=0 */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 7


 196:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = 0u;
 144              		.loc 1 197 0 discriminator 4
 145 0054 514B     		ldr	r3, .L17+56
 146 0056 0022     		mov	r2, #0
 147 0058 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = 0u;
 148              		.loc 1 198 0 discriminator 4
 149 005a 514B     		ldr	r3, .L17+60
 150 005c 0022     		mov	r2, #0
 151 005e 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_INTR_MASK_REG = ADC_SAR_Seq_SAR_INTR_MASK;
 152              		.loc 1 199 0 discriminator 4
 153 0060 504B     		ldr	r3, .L17+64
 154 0062 0122     		mov	r2, #1
 155 0064 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_ANA_TRIM_REG = ADC_SAR_Seq_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal = ADC_SAR_Seq_SAR_DFT_CTRL_REG;
 156              		.loc 1 206 0 discriminator 4
 157 0066 504B     		ldr	r3, .L17+68
 158 0068 1B68     		ldr	r3, [r3]
 159 006a 7B60     		str	r3, [r7, #4]
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_DCEN;
 160              		.loc 1 207 0 discriminator 4
 161 006c 7B68     		ldr	r3, [r7, #4]
 162 006e 4F4A     		ldr	r2, .L17+72
 163 0070 1340     		and	r3, r2
 164 0072 7B60     		str	r3, [r7, #4]
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****              (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_DCEN;
 165              		.loc 1 220 0 discriminator 4
 166 0074 7B68     		ldr	r3, [r7, #4]
 167 0076 8022     		mov	r2, #128
 168 0078 9205     		lsl	r2, r2, #22
 169 007a 1343     		orr	r3, r2
 170 007c 7B60     		str	r3, [r7, #4]
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_DLY_INC;
 171              		.loc 1 221 0 discriminator 4
 172 007e 7B68     		ldr	r3, [r7, #4]
 173 0080 0122     		mov	r2, #1
 174 0082 9343     		bic	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 8


 175 0084 7B60     		str	r3, [r7, #4]
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ((ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    (ADC_SAR_Seq_DEFAULT_VREF_SEL == ADC_SAR_Seq__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER == ADC_SAR_Seq_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_DFT_CTRL_REG = tmpRegVal;
 176              		.loc 1 226 0 discriminator 4
 177 0086 484B     		ldr	r3, .L17+68
 178 0088 7A68     		ldr	r2, [r7, #4]
 179 008a 1A60     		str	r2, [r3]
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_WOUNDING_REG = ADC_SAR_Seq_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_TOTAL_CHANNELS_NUM; chNum++)
 180              		.loc 1 232 0 discriminator 4
 181 008c 0023     		mov	r3, #0
 182 008e FB60     		str	r3, [r7, #12]
 183 0090 61E0     		b	.L8
 184              	.L16:
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         tmpRegVal = (ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_CHANNEL_CONFIG_MASK);
 185              		.loc 1 234 0
 186 0092 8023     		mov	r3, #128
 187 0094 5A00     		lsl	r2, r3, #1
 188 0096 DC23     		mov	r3, #220
 189 0098 9B01     		lsl	r3, r3, #6
 190 009a 1340     		and	r3, r2
 191 009c 7B60     		str	r3, [r7, #4]
 235:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal |= ADC_SAR_Seq_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* End ADC_SAR_Seq_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         */
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if((ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             (ADC_SAR_Seq_ALT_WOUNDING == ADC_SAR_Seq_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_MAX_RESOLUTION != ADC_SAR_Seq_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(chNum < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegV
 192              		.loc 1 253 0
 193 009e FB68     		ldr	r3, [r7, #12]
 194 00a0 9B00     		lsl	r3, r3, #2
 195 00a2 434A     		ldr	r2, .L17+76
 196 00a4 9446     		mov	ip, r2
 197 00a6 6344     		add	r3, r3, ip
 198 00a8 7A68     		ldr	r2, [r7, #4]
 199 00aa 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 9


 254:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 200              		.loc 1 255 0
 201 00ac 8023     		mov	r3, #128
 202 00ae 5B00     		lsl	r3, r3, #1
 203 00b0 0122     		mov	r2, #1
 204 00b2 1340     		and	r3, r2
 205 00b4 09D0     		beq	.L9
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 206              		.loc 1 257 0
 207 00b6 394B     		ldr	r3, .L17+56
 208 00b8 384A     		ldr	r2, .L17+56
 209 00ba 1268     		ldr	r2, [r2]
 210 00bc F968     		ldr	r1, [r7, #12]
 211 00be 0120     		mov	r0, #1
 212 00c0 8840     		lsl	r0, r0, r1
 213 00c2 011C     		mov	r1, r0
 214 00c4 89B2     		uxth	r1, r1
 215 00c6 0A43     		orr	r2, r1
 216 00c8 1A60     		str	r2, [r3]
 217              	.L9:
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 218              		.loc 1 260 0
 219 00ca 8023     		mov	r3, #128
 220 00cc 5B00     		lsl	r3, r3, #1
 221 00ce 0222     		mov	r2, #2
 222 00d0 1340     		and	r3, r2
 223 00d2 09D0     		beq	.L10
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 224              		.loc 1 262 0
 225 00d4 324B     		ldr	r3, .L17+60
 226 00d6 324A     		ldr	r2, .L17+60
 227 00d8 1268     		ldr	r2, [r2]
 228 00da F968     		ldr	r1, [r7, #12]
 229 00dc 0120     		mov	r0, #1
 230 00de 8840     		lsl	r0, r0, r1
 231 00e0 011C     		mov	r1, r0
 232 00e2 89B2     		uxth	r1, r1
 233 00e4 0A43     		orr	r2, r1
 234 00e6 1A60     		str	r2, [r3]
 235              	.L10:
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             else
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 CY_SET_REG32(ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_INJ_TAILG
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 10


 275:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 {
 277:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                     ADC_SAR_Seq_SAR_INTR_MASK_REG |= ADC_SAR_Seq_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 }
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_ALT_RESOLUTION_ON) != 0u)
 236              		.loc 1 282 0
 237 00e8 8023     		mov	r3, #128
 238 00ea 5A00     		lsl	r2, r3, #1
 239 00ec 8023     		mov	r3, #128
 240 00ee 9B00     		lsl	r3, r3, #2
 241 00f0 1340     		and	r3, r2
 242 00f2 03D0     		beq	.L11
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_DEFAULT_MAX_WRK_ALT;
 243              		.loc 1 284 0
 244 00f4 8023     		mov	r3, #128
 245 00f6 5B00     		lsl	r3, r3, #1
 246 00f8 BB60     		str	r3, [r7, #8]
 247 00fa 02E0     		b	.L12
 248              	.L11:
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                counts = (int32)ADC_SAR_Seq_SAR_WRK_MAX_12BIT;
 249              		.loc 1 288 0
 250 00fc 8023     		mov	r3, #128
 251 00fe 5B01     		lsl	r3, r3, #5
 252 0100 BB60     		str	r3, [r7, #8]
 253              	.L12:
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((ADC_SAR_Seq_channelsConfig[chNum] & ADC_SAR_Seq_DIFFERENTIAL_EN) == 0u)
 254              		.loc 1 291 0
 255 0102 8023     		mov	r3, #128
 256 0104 5A00     		lsl	r2, r3, #1
 257 0106 8023     		mov	r3, #128
 258 0108 5B00     		lsl	r3, r3, #1
 259 010a 1340     		and	r3, r2
 260 010c 05D1     		bne	.L13
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if((ADC_SAR_Seq_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 (ADC_SAR_Seq_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq__VREF))
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 261              		.loc 1 298 0
 262 010e 294B     		ldr	r3, .L17+80
 263 0110 FA68     		ldr	r2, [r7, #12]
 264 0112 5200     		lsl	r2, r2, #1
 265 0114 0021     		mov	r1, #0
 266 0116 D152     		strh	r1, [r2, r3]
 267 0118 09E0     		b	.L14
 268              	.L13:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 11


 299:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #if(ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = (int16)(counts / 2);
 269              		.loc 1 305 0
 270 011a BB68     		ldr	r3, [r7, #8]
 271 011c 002B     		cmp	r3, #0
 272 011e 00DA     		bge	.L15
 273 0120 0133     		add	r3, r3, #1
 274              	.L15:
 275 0122 5B10     		asr	r3, r3, #1
 276 0124 99B2     		uxth	r1, r3
 277 0126 234B     		ldr	r3, .L17+80
 278 0128 FA68     		ldr	r2, [r7, #12]
 279 012a 5200     		lsl	r2, r2, #1
 280 012c D152     		strh	r1, [r2, r3]
 281              	.L14:
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #else
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             #endif /* end ADC_SAR_Seq_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_10MV_COUNTS) +
 282              		.loc 1 311 0 discriminator 2
 283 012e BB68     		ldr	r3, [r7, #8]
 284 0130 214A     		ldr	r2, .L17+84
 285 0132 5343     		mul	r3, r2
 286 0134 214A     		ldr	r2, .L17+88
 287 0136 9446     		mov	ip, r2
 288 0138 6344     		add	r3, r3, ip
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 289              		.loc 1 312 0 discriminator 2
 290 013a 181C     		mov	r0, r3
 291 013c 2049     		ldr	r1, .L17+92
 292 013e FFF7FEFF 		bl	__aeabi_idiv
 293 0142 031C     		mov	r3, r0
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                             ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_DEFAULT_VREF_MV_VALUE
 294              		.loc 1 311 0 discriminator 2
 295 0144 9BB2     		uxth	r3, r3
 296 0146 19B2     		sxth	r1, r3
 297 0148 1E4B     		ldr	r3, .L17+96
 298 014a FA68     		ldr	r2, [r7, #12]
 299 014c 9200     		lsl	r2, r2, #2
 300 014e D150     		str	r1, [r2, r3]
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 301              		.loc 1 232 0 discriminator 2
 302 0150 FB68     		ldr	r3, [r7, #12]
 303 0152 0133     		add	r3, r3, #1
 304 0154 FB60     		str	r3, [r7, #12]
 305              	.L8:
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 306              		.loc 1 232 0 is_stmt 0 discriminator 1
 307 0156 FB68     		ldr	r3, [r7, #12]
 308 0158 002B     		cmp	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 12


 309 015a 9AD0     		beq	.L16
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 310              		.loc 1 314 0 is_stmt 1
 311 015c BD46     		mov	sp, r7
 312 015e 04B0     		add	sp, sp, #16
 313              		@ sp needed
 314 0160 80BD     		pop	{r7, pc}
 315              	.L18:
 316 0162 C046     		.align	2
 317              	.L17:
 318 0164 00000000 		.word	ADC_SAR_Seq_ISR
 319 0168 20003A40 		.word	1077542944
 320 016c 80033A40 		.word	1077543808
 321 0170 70021051 		.word	1360003696
 322 0174 70020051 		.word	1358955120
 323 0178 00003A40 		.word	1077542912
 324 017c 04003A40 		.word	1077542916
 325 0180 C4000A80 		.word	-2146828092
 326 0184 18003A40 		.word	1077542936
 327 0188 0000FF07 		.word	134152192
 328 018c 1C003A40 		.word	1077542940
 329 0190 10003A40 		.word	1077542928
 330 0194 04000400 		.word	262148
 331 0198 14003A40 		.word	1077542932
 332 019c 28023A40 		.word	1077543464
 333 01a0 38023A40 		.word	1077543480
 334 01a4 18023A40 		.word	1077543448
 335 01a8 30003A40 		.word	1077542960
 336 01ac FFFFFFDF 		.word	-536870913
 337 01b0 80003A40 		.word	1077543040
 338 01b4 00000000 		.word	ADC_SAR_Seq_offset
 339 01b8 10270000 		.word	10000
 340 01bc E40C0000 		.word	3300
 341 01c0 C8190000 		.word	6600
 342 01c4 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 343              		.cfi_endproc
 344              	.LFE3:
 345              		.size	ADC_SAR_Seq_Init, .-ADC_SAR_Seq_Init
 346              		.section	.text.ADC_SAR_Seq_Enable,"ax",%progbits
 347              		.align	2
 348              		.global	ADC_SAR_Seq_Enable
 349              		.code	16
 350              		.thumb_func
 351              		.type	ADC_SAR_Seq_Enable, %function
 352              	ADC_SAR_Seq_Enable:
 353              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 13


 325:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Enable(void)
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 354              		.loc 1 331 0
 355              		.cfi_startproc
 356 0000 80B5     		push	{r7, lr}
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 00AF     		add	r7, sp, #0
 361              		.cfi_def_cfa_register 7
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if (0u == (ADC_SAR_Seq_SAR_CTRL_REG & ADC_SAR_Seq_ENABLE))
 362              		.loc 1 332 0
 363 0004 0A4B     		ldr	r3, .L22
 364 0006 1B68     		ldr	r3, [r3]
 365 0008 002B     		cmp	r3, #0
 366 000a 0EDB     		blt	.L19
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             while (0u != (ADC_SAR_Seq_SAR_STATUS_REG & ADC_SAR_Seq_STATUS_BUSY))
 367              		.loc 1 336 0
 368 000c C046     		mov	r8, r8
 369              	.L21:
 370              		.loc 1 336 0 is_stmt 0 discriminator 1
 371 000e 094B     		ldr	r3, .L22+4
 372 0010 1B68     		ldr	r3, [r3]
 373 0012 002B     		cmp	r3, #0
 374 0014 FBDB     		blt	.L21
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* (ADC_SAR_Seq_CY_SAR_IP_VER != ADC_SAR_Seq_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_CTRL_REG |= ADC_SAR_Seq_ENABLE;
 375              		.loc 1 342 0 is_stmt 1
 376 0016 064B     		ldr	r3, .L22
 377 0018 054A     		ldr	r2, .L22
 378 001a 1268     		ldr	r2, [r2]
 379 001c 8021     		mov	r1, #128
 380 001e 0906     		lsl	r1, r1, #24
 381 0020 0A43     		orr	r2, r1
 382 0022 1A60     		str	r2, [r3]
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CyDelayUs(ADC_SAR_Seq_10US_DELAY);         
 383              		.loc 1 345 0
 384 0024 0A20     		mov	r0, #10
 385 0026 FFF7FEFF 		bl	CyDelayUs
 386              	.L19:
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 387              		.loc 1 347 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 14


 388 002a BD46     		mov	sp, r7
 389              		@ sp needed
 390 002c 80BD     		pop	{r7, pc}
 391              	.L23:
 392 002e C046     		.align	2
 393              	.L22:
 394 0030 00003A40 		.word	1077542912
 395 0034 08023A40 		.word	1077543432
 396              		.cfi_endproc
 397              	.LFE4:
 398              		.size	ADC_SAR_Seq_Enable, .-ADC_SAR_Seq_Enable
 399              		.section	.text.ADC_SAR_Seq_Stop,"ax",%progbits
 400              		.align	2
 401              		.global	ADC_SAR_Seq_Stop
 402              		.code	16
 403              		.thumb_func
 404              		.type	ADC_SAR_Seq_Stop, %function
 405              	ADC_SAR_Seq_Stop:
 406              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_Stop
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_Stop(void)
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 407              		.loc 1 366 0
 408              		.cfi_startproc
 409 0000 80B5     		push	{r7, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 7, -8
 412              		.cfi_offset 14, -4
 413 0002 00AF     		add	r7, sp, #0
 414              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_ENABLE;
 415              		.loc 1 367 0
 416 0004 034B     		ldr	r3, .L25
 417 0006 034A     		ldr	r2, .L25
 418 0008 1268     		ldr	r2, [r2]
 419 000a 5200     		lsl	r2, r2, #1
 420 000c 5208     		lsr	r2, r2, #1
 421 000e 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 422              		.loc 1 368 0
 423 0010 BD46     		mov	sp, r7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 15


 424              		@ sp needed
 425 0012 80BD     		pop	{r7, pc}
 426              	.L26:
 427              		.align	2
 428              	.L25:
 429 0014 00003A40 		.word	1077542912
 430              		.cfi_endproc
 431              	.LFE5:
 432              		.size	ADC_SAR_Seq_Stop, .-ADC_SAR_Seq_Stop
 433              		.section	.text.ADC_SAR_Seq_StartConvert,"ax",%progbits
 434              		.align	2
 435              		.global	ADC_SAR_Seq_StartConvert
 436              		.code	16
 437              		.thumb_func
 438              		.type	ADC_SAR_Seq_StartConvert, %function
 439              	ADC_SAR_Seq_StartConvert:
 440              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StartConvert
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 441              		.loc 1 392 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 00AF     		add	r7, sp, #0
 448              		.cfi_def_cfa_register 7
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_START_CTRL_REG = ADC_SAR_Seq_FW_TRIGGER;
 449              		.loc 1 396 0
 450 0004 024B     		ldr	r3, .L28
 451 0006 0122     		mov	r2, #1
 452 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 16


 397:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* End ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 453              		.loc 1 399 0
 454 000a BD46     		mov	sp, r7
 455              		@ sp needed
 456 000c 80BD     		pop	{r7, pc}
 457              	.L29:
 458 000e C046     		.align	2
 459              	.L28:
 460 0010 24003A40 		.word	1077542948
 461              		.cfi_endproc
 462              	.LFE6:
 463              		.size	ADC_SAR_Seq_StartConvert, .-ADC_SAR_Seq_StartConvert
 464              		.section	.text.ADC_SAR_Seq_StopConvert,"ax",%progbits
 465              		.align	2
 466              		.global	ADC_SAR_Seq_StopConvert
 467              		.code	16
 468              		.thumb_func
 469              		.type	ADC_SAR_Seq_StopConvert, %function
 470              	ADC_SAR_Seq_StopConvert:
 471              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_StopConvert
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 406:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 472              		.loc 1 417 0
 473              		.cfi_startproc
 474 0000 80B5     		push	{r7, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 7, -8
 477              		.cfi_offset 14, -4
 478 0002 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 480              		.loc 1 421 0
 481 0004 BD46     		mov	sp, r7
 482              		@ sp needed
 483 0006 80BD     		pop	{r7, pc}
 484              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 17


 485              	.LFE7:
 486              		.size	ADC_SAR_Seq_StopConvert, .-ADC_SAR_Seq_StopConvert
 487              		.section	.text.ADC_SAR_Seq_IsEndConversion,"ax",%progbits
 488              		.align	2
 489              		.global	ADC_SAR_Seq_IsEndConversion
 490              		.code	16
 491              		.thumb_func
 492              		.type	ADC_SAR_Seq_IsEndConversion, %function
 493              	ADC_SAR_Seq_IsEndConversion:
 494              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** uint32 ADC_SAR_Seq_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 495              		.loc 1 451 0
 496              		.cfi_startproc
 497 0000 80B5     		push	{r7, lr}
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 7, -8
 500              		.cfi_offset 14, -4
 501 0002 84B0     		sub	sp, sp, #16
 502              		.cfi_def_cfa_offset 24
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 status = 0u;
 506              		.loc 1 452 0
 507 0008 0023     		mov	r3, #0
 508 000a FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if((retMode & (ADC_SAR_Seq_RETURN_STATUS | ADC_SAR_Seq_WAIT_FOR_RESULT)) != 0u)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 18


 509              		.loc 1 454 0
 510 000c 7B68     		ldr	r3, [r7, #4]
 511 000e 0322     		mov	r2, #3
 512 0010 1340     		and	r3, r2
 513 0012 11D0     		beq	.L32
 514              	.L34:
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         do
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             status = ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_EOS_MASK;
 515              		.loc 1 458 0 discriminator 2
 516 0014 0B4B     		ldr	r3, .L36
 517 0016 1B68     		ldr	r3, [r3]
 518 0018 0122     		mov	r2, #1
 519 001a 1340     		and	r3, r2
 520 001c FB60     		str	r3, [r7, #12]
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT) != 0u));
 521              		.loc 1 459 0 discriminator 2
 522 001e FB68     		ldr	r3, [r7, #12]
 523 0020 002B     		cmp	r3, #0
 524 0022 03D1     		bne	.L33
 525              		.loc 1 459 0 is_stmt 0 discriminator 1
 526 0024 7B68     		ldr	r3, [r7, #4]
 527 0026 0222     		mov	r2, #2
 528 0028 1340     		and	r3, r2
 529 002a F3D1     		bne	.L34
 530              	.L33:
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if(status != 0u)
 531              		.loc 1 461 0 is_stmt 1
 532 002c FB68     		ldr	r3, [r7, #12]
 533 002e 002B     		cmp	r3, #0
 534 0030 02D0     		beq	.L32
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_EOS_MASK;
 535              		.loc 1 464 0
 536 0032 044B     		ldr	r3, .L36
 537 0034 0122     		mov	r2, #1
 538 0036 1A60     		str	r2, [r3]
 539              	.L32:
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         if((retMode & (ADC_SAR_Seq_RETURN_STATUS_INJ | ADC_SAR_Seq_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         {
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             do
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 status |= ADC_SAR_Seq_SAR_INTR_REG & ADC_SAR_Seq_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }while(((status & ADC_SAR_Seq_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                    ((retMode & ADC_SAR_Seq_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((status & ADC_SAR_Seq_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_SAR_INTR_REG = ADC_SAR_Seq_INJ_EOC_MASK;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 19


 481:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         }
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return (status);
 540              		.loc 1 485 0
 541 0038 FB68     		ldr	r3, [r7, #12]
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 542              		.loc 1 486 0
 543 003a 181C     		mov	r0, r3
 544 003c BD46     		mov	sp, r7
 545 003e 04B0     		add	sp, sp, #16
 546              		@ sp needed
 547 0040 80BD     		pop	{r7, pc}
 548              	.L37:
 549 0042 C046     		.align	2
 550              	.L36:
 551 0044 10023A40 		.word	1077543440
 552              		.cfi_endproc
 553              	.LFE8:
 554              		.size	ADC_SAR_Seq_IsEndConversion, .-ADC_SAR_Seq_IsEndConversion
 555              		.section	.text.ADC_SAR_Seq_GetResult16,"ax",%progbits
 556              		.align	2
 557              		.global	ADC_SAR_Seq_GetResult16
 558              		.code	16
 559              		.thumb_func
 560              		.type	ADC_SAR_Seq_GetResult16, %function
 561              	ADC_SAR_Seq_GetResult16:
 562              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_GetResult16
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** int16 ADC_SAR_Seq_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 563              		.loc 1 505 0
 564              		.cfi_startproc
 565 0000 80B5     		push	{r7, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 7, -8
 568              		.cfi_offset 14, -4
 569 0002 84B0     		sub	sp, sp, #16
 570              		.cfi_def_cfa_offset 24
 571 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 20


 572              		.cfi_def_cfa_register 7
 573 0006 7860     		str	r0, [r7, #4]
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 574              		.loc 1 509 0
 575 0008 7B68     		ldr	r3, [r7, #4]
 576 000a 002B     		cmp	r3, #0
 577 000c 02D0     		beq	.L39
 578              		.loc 1 509 0 is_stmt 0 discriminator 1
 579 000e 0020     		mov	r0, #0
 580 0010 FFF7FEFF 		bl	CyHalt
 581              	.L39:
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     if(chan < ADC_SAR_Seq_SEQUENCED_CHANNELS_NUM)
 582              		.loc 1 511 0 is_stmt 1
 583 0014 7B68     		ldr	r3, [r7, #4]
 584 0016 002B     		cmp	r3, #0
 585 0018 09D1     		bne	.L40
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 586              		.loc 1 513 0
 587 001a 7B68     		ldr	r3, [r7, #4]
 588 001c 9B00     		lsl	r3, r3, #2
 589 001e 084A     		ldr	r2, .L43
 590 0020 9446     		mov	ip, r2
 591 0022 6344     		add	r3, r3, ip
 592 0024 1B68     		ldr	r3, [r3]
 593 0026 1B04     		lsl	r3, r3, #16
 594 0028 1B0C     		lsr	r3, r3, #16
 595 002a FB60     		str	r3, [r7, #12]
 596 002c 01E0     		b	.L41
 597              	.L40:
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 ADC_SAR_Seq_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     else
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = ADC_SAR_Seq_SAR_INJ_RESULT_REG & ADC_SAR_Seq_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #else
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             result = 0u;
 598              		.loc 1 521 0
 599 002e 0023     		mov	r3, #0
 600 0030 FB60     		str	r3, [r7, #12]
 601              	.L41:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     return ( (int16)result );
 602              		.loc 1 525 0
 603 0032 FB68     		ldr	r3, [r7, #12]
 604 0034 9BB2     		uxth	r3, r3
 605 0036 1BB2     		sxth	r3, r3
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 606              		.loc 1 526 0
 607 0038 181C     		mov	r0, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 21


 608 003a BD46     		mov	sp, r7
 609 003c 04B0     		add	sp, sp, #16
 610              		@ sp needed
 611 003e 80BD     		pop	{r7, pc}
 612              	.L44:
 613              		.align	2
 614              	.L43:
 615 0040 80013A40 		.word	1077543296
 616              		.cfi_endproc
 617              	.LFE9:
 618              		.size	ADC_SAR_Seq_GetResult16, .-ADC_SAR_Seq_GetResult16
 619              		.section	.text.ADC_SAR_Seq_SetChanMask,"ax",%progbits
 620              		.align	2
 621              		.global	ADC_SAR_Seq_SetChanMask
 622              		.code	16
 623              		.thumb_func
 624              		.type	ADC_SAR_Seq_SetChanMask, %function
 625              	ADC_SAR_Seq_SetChanMask:
 626              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetChanMask
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 627              		.loc 1 550 0
 628              		.cfi_startproc
 629 0000 80B5     		push	{r7, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 82B0     		sub	sp, sp, #8
 634              		.cfi_def_cfa_offset 16
 635 0004 00AF     		add	r7, sp, #0
 636              		.cfi_def_cfa_register 7
 637 0006 7860     		str	r0, [r7, #4]
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 638              		.loc 1 551 0
 639 0008 034B     		ldr	r3, .L46
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 22


 640 000a 7A68     		ldr	r2, [r7, #4]
 641 000c 0121     		mov	r1, #1
 642 000e 0A40     		and	r2, r1
 643 0010 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 644              		.loc 1 552 0
 645 0012 BD46     		mov	sp, r7
 646 0014 02B0     		add	sp, sp, #8
 647              		@ sp needed
 648 0016 80BD     		pop	{r7, pc}
 649              	.L47:
 650              		.align	2
 651              	.L46:
 652 0018 20003A40 		.word	1077542944
 653              		.cfi_endproc
 654              	.LFE10:
 655              		.size	ADC_SAR_Seq_SetChanMask, .-ADC_SAR_Seq_SetChanMask
 656              		.section	.text.ADC_SAR_Seq_SetLowLimit,"ax",%progbits
 657              		.align	2
 658              		.global	ADC_SAR_Seq_SetLowLimit
 659              		.code	16
 660              		.thumb_func
 661              		.type	ADC_SAR_Seq_SetLowLimit, %function
 662              	ADC_SAR_Seq_SetLowLimit:
 663              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_EnableInjection
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     void ADC_SAR_Seq_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 573:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         ADC_SAR_Seq_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #endif /* ADC_SAR_Seq_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 23


 585:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 664              		.loc 1 594 0
 665              		.cfi_startproc
 666 0000 80B5     		push	{r7, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 7, -8
 669              		.cfi_offset 14, -4
 670 0002 82B0     		sub	sp, sp, #8
 671              		.cfi_def_cfa_offset 16
 672 0004 00AF     		add	r7, sp, #0
 673              		.cfi_def_cfa_register 7
 674 0006 7860     		str	r0, [r7, #4]
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_LOW_MASK);
 675              		.loc 1 595 0
 676 0008 084B     		ldr	r3, .L49
 677 000a 084A     		ldr	r2, .L49
 678 000c 1268     		ldr	r2, [r2]
 679 000e 120C     		lsr	r2, r2, #16
 680 0010 1204     		lsl	r2, r2, #16
 681 0012 1A60     		str	r2, [r3]
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_RANGE_LOW_MASK;
 682              		.loc 1 596 0
 683 0014 054B     		ldr	r3, .L49
 684 0016 054A     		ldr	r2, .L49
 685 0018 1168     		ldr	r1, [r2]
 686 001a 7A68     		ldr	r2, [r7, #4]
 687 001c 1204     		lsl	r2, r2, #16
 688 001e 120C     		lsr	r2, r2, #16
 689 0020 0A43     		orr	r2, r1
 690 0022 1A60     		str	r2, [r3]
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 691              		.loc 1 597 0
 692 0024 BD46     		mov	sp, r7
 693 0026 02B0     		add	sp, sp, #8
 694              		@ sp needed
 695 0028 80BD     		pop	{r7, pc}
 696              	.L50:
 697 002a C046     		.align	2
 698              	.L49:
 699 002c 18003A40 		.word	1077542936
 700              		.cfi_endproc
 701              	.LFE11:
 702              		.size	ADC_SAR_Seq_SetLowLimit, .-ADC_SAR_Seq_SetLowLimit
 703              		.section	.text.ADC_SAR_Seq_SetHighLimit,"ax",%progbits
 704              		.align	2
 705              		.global	ADC_SAR_Seq_SetHighLimit
 706              		.code	16
 707              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 24


 708              		.type	ADC_SAR_Seq_SetHighLimit, %function
 709              	ADC_SAR_Seq_SetHighLimit:
 710              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 711              		.loc 1 615 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 82B0     		sub	sp, sp, #8
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_RANGE_HIGH_MASK);
 722              		.loc 1 616 0
 723 0008 074B     		ldr	r3, .L52
 724 000a 074A     		ldr	r2, .L52
 725 000c 1268     		ldr	r2, [r2]
 726 000e 1204     		lsl	r2, r2, #16
 727 0010 120C     		lsr	r2, r2, #16
 728 0012 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_RANGE_HIGH_OFFSET);
 729              		.loc 1 617 0
 730 0014 044B     		ldr	r3, .L52
 731 0016 044A     		ldr	r2, .L52
 732 0018 1168     		ldr	r1, [r2]
 733 001a 7A68     		ldr	r2, [r7, #4]
 734 001c 1204     		lsl	r2, r2, #16
 735 001e 0A43     		orr	r2, r1
 736 0020 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 737              		.loc 1 618 0
 738 0022 BD46     		mov	sp, r7
 739 0024 02B0     		add	sp, sp, #8
 740              		@ sp needed
 741 0026 80BD     		pop	{r7, pc}
 742              	.L53:
 743              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 25


 744              	.L52:
 745 0028 18003A40 		.word	1077542936
 746              		.cfi_endproc
 747              	.LFE12:
 748              		.size	ADC_SAR_Seq_SetHighLimit, .-ADC_SAR_Seq_SetHighLimit
 749              		.section	.text.ADC_SAR_Seq_SetLimitMask,"ax",%progbits
 750              		.align	2
 751              		.global	ADC_SAR_Seq_SetLimitMask
 752              		.code	16
 753              		.thumb_func
 754              		.type	ADC_SAR_Seq_SetLimitMask, %function
 755              	ADC_SAR_Seq_SetLimitMask:
 756              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 757              		.loc 1 639 0
 758              		.cfi_startproc
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 82B0     		sub	sp, sp, #8
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 768              		.loc 1 640 0
 769 0008 034B     		ldr	r3, .L55
 770 000a 7A68     		ldr	r2, [r7, #4]
 771 000c 0121     		mov	r1, #1
 772 000e 0A40     		and	r2, r1
 773 0010 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 774              		.loc 1 641 0
 775 0012 BD46     		mov	sp, r7
 776 0014 02B0     		add	sp, sp, #8
 777              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 26


 778 0016 80BD     		pop	{r7, pc}
 779              	.L56:
 780              		.align	2
 781              	.L55:
 782 0018 38023A40 		.word	1077543480
 783              		.cfi_endproc
 784              	.LFE13:
 785              		.size	ADC_SAR_Seq_SetLimitMask, .-ADC_SAR_Seq_SetLimitMask
 786              		.section	.text.ADC_SAR_Seq_SetSatMask,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_SAR_Seq_SetSatMask
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_SAR_Seq_SetSatMask, %function
 792              	ADC_SAR_Seq_SetSatMask:
 793              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetSatMask
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 794              		.loc 1 662 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 82B0     		sub	sp, sp, #8
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_MAX_CHANNELS_EN_MASK;
 805              		.loc 1 663 0
 806 0008 034B     		ldr	r3, .L58
 807 000a 7A68     		ldr	r2, [r7, #4]
 808 000c 0121     		mov	r1, #1
 809 000e 0A40     		and	r2, r1
 810 0010 1A60     		str	r2, [r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 811              		.loc 1 664 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 27


 812 0012 BD46     		mov	sp, r7
 813 0014 02B0     		add	sp, sp, #8
 814              		@ sp needed
 815 0016 80BD     		pop	{r7, pc}
 816              	.L59:
 817              		.align	2
 818              	.L58:
 819 0018 28023A40 		.word	1077543464
 820              		.cfi_endproc
 821              	.LFE14:
 822              		.size	ADC_SAR_Seq_SetSatMask, .-ADC_SAR_Seq_SetSatMask
 823              		.section	.text.ADC_SAR_Seq_SetOffset,"ax",%progbits
 824              		.align	2
 825              		.global	ADC_SAR_Seq_SetOffset
 826              		.code	16
 827              		.thumb_func
 828              		.type	ADC_SAR_Seq_SetOffset, %function
 829              	ADC_SAR_Seq_SetOffset:
 830              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetOffset
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 831              		.loc 1 690 0
 832              		.cfi_startproc
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 842 0008 0A1C     		mov	r2, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 28


 843 000a BB1C     		add	r3, r7, #2
 844 000c 1A80     		strh	r2, [r3]
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 845              		.loc 1 692 0
 846 000e 7B68     		ldr	r3, [r7, #4]
 847 0010 002B     		cmp	r3, #0
 848 0012 02D0     		beq	.L61
 849              		.loc 1 692 0 is_stmt 0 discriminator 1
 850 0014 0020     		mov	r0, #0
 851 0016 FFF7FEFF 		bl	CyHalt
 852              	.L61:
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_offset[chan] = offset;
 853              		.loc 1 694 0 is_stmt 1
 854 001a 044B     		ldr	r3, .L62
 855 001c 7A68     		ldr	r2, [r7, #4]
 856 001e 5200     		lsl	r2, r2, #1
 857 0020 B91C     		add	r1, r7, #2
 858 0022 0988     		ldrh	r1, [r1]
 859 0024 D152     		strh	r1, [r2, r3]
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 860              		.loc 1 695 0
 861 0026 BD46     		mov	sp, r7
 862 0028 02B0     		add	sp, sp, #8
 863              		@ sp needed
 864 002a 80BD     		pop	{r7, pc}
 865              	.L63:
 866              		.align	2
 867              	.L62:
 868 002c 00000000 		.word	ADC_SAR_Seq_offset
 869              		.cfi_endproc
 870              	.LFE15:
 871              		.size	ADC_SAR_Seq_SetOffset, .-ADC_SAR_Seq_SetOffset
 872              		.section	.text.ADC_SAR_Seq_SetGain,"ax",%progbits
 873              		.align	2
 874              		.global	ADC_SAR_Seq_SetGain
 875              		.code	16
 876              		.thumb_func
 877              		.type	ADC_SAR_Seq_SetGain, %function
 878              	ADC_SAR_Seq_SetGain:
 879              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Function Name: ADC_SAR_Seq_SetGain
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 29


 711:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *  ADC_SAR_Seq_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** void ADC_SAR_Seq_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** {
 880              		.loc 1 724 0
 881              		.cfi_startproc
 882 0000 80B5     		push	{r7, lr}
 883              		.cfi_def_cfa_offset 8
 884              		.cfi_offset 7, -8
 885              		.cfi_offset 14, -4
 886 0002 82B0     		sub	sp, sp, #8
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
 891 0008 3960     		str	r1, [r7]
 725:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 892              		.loc 1 726 0
 893 000a 7B68     		ldr	r3, [r7, #4]
 894 000c 002B     		cmp	r3, #0
 895 000e 02D0     		beq	.L65
 896              		.loc 1 726 0 is_stmt 0 discriminator 1
 897 0010 0020     		mov	r0, #0
 898 0012 FFF7FEFF 		bl	CyHalt
 899              	.L65:
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ADC_SAR_Seq_countsPer10Volt[chan] = adcGain;
 900              		.loc 1 728 0 is_stmt 1
 901 0016 044B     		ldr	r3, .L66
 902 0018 7A68     		ldr	r2, [r7, #4]
 903 001a 9200     		lsl	r2, r2, #2
 904 001c 3968     		ldr	r1, [r7]
 905 001e D150     		str	r1, [r2, r3]
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** }
 906              		.loc 1 729 0
 907 0020 BD46     		mov	sp, r7
 908 0022 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 0024 80BD     		pop	{r7, pc}
 911              	.L67:
 912 0026 C046     		.align	2
 913              	.L66:
 914 0028 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 915              		.cfi_endproc
 916              	.LFE16:
 917              		.size	ADC_SAR_Seq_SetGain, .-ADC_SAR_Seq_SetGain
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 30


 918              		.section	.text.ADC_SAR_Seq_CountsTo_mVolts,"ax",%progbits
 919              		.align	2
 920              		.global	ADC_SAR_Seq_CountsTo_mVolts
 921              		.code	16
 922              		.thumb_func
 923              		.type	ADC_SAR_Seq_CountsTo_mVolts, %function
 924              	ADC_SAR_Seq_CountsTo_mVolts:
 925              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** #if(ADC_SAR_Seq_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq__RIGHT)
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int16 ADC_SAR_Seq_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 926              		.loc 1 757 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 84B0     		sub	sp, sp, #16
 933              		.cfi_def_cfa_offset 24
 934 0004 00AF     		add	r7, sp, #0
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 937 0008 0A1C     		mov	r2, r1
 938 000a BB1C     		add	r3, r7, #2
 939 000c 1A80     		strh	r2, [r3]
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 760:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 940              		.loc 1 761 0
 941 000e 7B68     		ldr	r3, [r7, #4]
 942 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 31


 943 0012 02D0     		beq	.L69
 944              		.loc 1 761 0 is_stmt 0 discriminator 1
 945 0014 0020     		mov	r0, #0
 946 0016 FFF7FEFF 		bl	CyHalt
 947              	.L69:
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 767:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 948              		.loc 1 772 0 is_stmt 1
 949 001a 1F4B     		ldr	r3, .L75
 950 001c 7A68     		ldr	r2, [r7, #4]
 951 001e 5200     		lsl	r2, r2, #1
 952 0020 D35A     		ldrh	r3, [r2, r3]
 953 0022 99B2     		uxth	r1, r3
 954 0024 BB1C     		add	r3, r7, #2
 955 0026 1A88     		ldrh	r2, [r3]
 956 0028 8BB2     		uxth	r3, r1
 957 002a D31A     		sub	r3, r2, r3
 958 002c 9AB2     		uxth	r2, r3
 959 002e BB1C     		add	r3, r7, #2
 960 0030 1A80     		strh	r2, [r3]
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_10MV_COUNTS) + ( (adcCounts > 0) ?
 961              		.loc 1 774 0
 962 0032 BB1C     		add	r3, r7, #2
 963 0034 0022     		mov	r2, #0
 964 0036 9B5E     		ldrsh	r3, [r3, r2]
 965 0038 184A     		ldr	r2, .L75+4
 966 003a 5A43     		mul	r2, r3
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 967              		.loc 1 775 0
 968 003c BB1C     		add	r3, r7, #2
 969 003e 0021     		mov	r1, #0
 970 0040 5B5E     		ldrsh	r3, [r3, r1]
 971 0042 002B     		cmp	r3, #0
 972 0044 08DD     		ble	.L70
 973              		.loc 1 775 0 is_stmt 0 discriminator 1
 974 0046 164B     		ldr	r3, .L75+8
 975 0048 7968     		ldr	r1, [r7, #4]
 976 004a 8900     		lsl	r1, r1, #2
 977 004c CB58     		ldr	r3, [r1, r3]
 978 004e 002B     		cmp	r3, #0
 979 0050 00DA     		bge	.L71
 980 0052 0133     		add	r3, r3, #1
 981              	.L71:
 982 0054 5B10     		asr	r3, r3, #1
 983 0056 08E0     		b	.L72
 984              	.L70:
 985              		.loc 1 775 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 32


 986 0058 114B     		ldr	r3, .L75+8
 987 005a 7968     		ldr	r1, [r7, #4]
 988 005c 8900     		lsl	r1, r1, #2
 989 005e CB58     		ldr	r3, [r1, r3]
 990 0060 002B     		cmp	r3, #0
 991 0062 00DA     		bge	.L73
 992 0064 0133     		add	r3, r3, #1
 993              	.L73:
 994 0066 5B10     		asr	r3, r3, #1
 995 0068 5B42     		neg	r3, r3
 996              	.L72:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 997              		.loc 1 774 0 is_stmt 1
 998 006a D118     		add	r1, r2, r3
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  / ADC_SAR_Seq_countsPer10Volt[chan]);
 999              		.loc 1 776 0
 1000 006c 0C4B     		ldr	r3, .L75+8
 1001 006e 7A68     		ldr	r2, [r7, #4]
 1002 0070 9200     		lsl	r2, r2, #2
 1003 0072 D358     		ldr	r3, [r2, r3]
 1004 0074 081C     		mov	r0, r1
 1005 0076 191C     		mov	r1, r3
 1006 0078 FFF7FEFF 		bl	__aeabi_idiv
 1007 007c 031C     		mov	r3, r0
 1008 007e 1A1C     		mov	r2, r3
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                  (ADC_SAR_Seq_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_countsPer10Volt[chan] / 2
 1009              		.loc 1 774 0
 1010 0080 0E23     		mov	r3, #14
 1011 0082 FB18     		add	r3, r7, r3
 1012 0084 1A80     		strh	r2, [r3]
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( mVolts );
 1013              		.loc 1 778 0
 1014 0086 0E23     		mov	r3, #14
 1015 0088 FB18     		add	r3, r7, r3
 1016 008a 1B88     		ldrh	r3, [r3]
 1017 008c 1BB2     		sxth	r3, r3
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1018              		.loc 1 779 0
 1019 008e 181C     		mov	r0, r3
 1020 0090 BD46     		mov	sp, r7
 1021 0092 04B0     		add	sp, sp, #16
 1022              		@ sp needed
 1023 0094 80BD     		pop	{r7, pc}
 1024              	.L76:
 1025 0096 C046     		.align	2
 1026              	.L75:
 1027 0098 00000000 		.word	ADC_SAR_Seq_offset
 1028 009c 10270000 		.word	10000
 1029 00a0 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1030              		.cfi_endproc
 1031              	.LFE17:
 1032              		.size	ADC_SAR_Seq_CountsTo_mVolts, .-ADC_SAR_Seq_CountsTo_mVolts
 1033              		.global	__aeabi_lmul
 1034              		.global	__aeabi_ldivmod
 1035              		.section	.text.ADC_SAR_Seq_CountsTo_uVolts,"ax",%progbits
 1036              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 33


 1037              		.global	ADC_SAR_Seq_CountsTo_uVolts
 1038              		.code	16
 1039              		.thumb_func
 1040              		.type	ADC_SAR_Seq_CountsTo_uVolts, %function
 1041              	ADC_SAR_Seq_CountsTo_uVolts:
 1042              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 802:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     int32 ADC_SAR_Seq_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1043              		.loc 1 811 0
 1044              		.cfi_startproc
 1045 0000 B0B5     		push	{r4, r5, r7, lr}
 1046              		.cfi_def_cfa_offset 16
 1047              		.cfi_offset 4, -16
 1048              		.cfi_offset 5, -12
 1049              		.cfi_offset 7, -8
 1050              		.cfi_offset 14, -4
 1051 0002 86B0     		sub	sp, sp, #24
 1052              		.cfi_def_cfa_offset 40
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 1055 0006 F860     		str	r0, [r7, #12]
 1056 0008 0A1C     		mov	r2, r1
 1057 000a 0A23     		mov	r3, #10
 1058 000c FB18     		add	r3, r7, r3
 1059 000e 1A80     		strh	r2, [r3]
 812:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 34


 814:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 1060              		.loc 1 815 0
 1061 0010 FB68     		ldr	r3, [r7, #12]
 1062 0012 002B     		cmp	r3, #0
 1063 0014 02D0     		beq	.L78
 1064              		.loc 1 815 0 is_stmt 0 discriminator 1
 1065 0016 0020     		mov	r0, #0
 1066 0018 FFF7FEFF 		bl	CyHalt
 1067              	.L78:
 816:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 817:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 821:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 823:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 825:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1068              		.loc 1 826 0 is_stmt 1
 1069 001c 194B     		ldr	r3, .L80
 1070 001e FA68     		ldr	r2, [r7, #12]
 1071 0020 5200     		lsl	r2, r2, #1
 1072 0022 D35A     		ldrh	r3, [r2, r3]
 1073 0024 99B2     		uxth	r1, r3
 1074 0026 0A23     		mov	r3, #10
 1075 0028 FB18     		add	r3, r7, r3
 1076 002a 1A88     		ldrh	r2, [r3]
 1077 002c 8BB2     		uxth	r3, r1
 1078 002e D31A     		sub	r3, r2, r3
 1079 0030 9AB2     		uxth	r2, r3
 1080 0032 0A23     		mov	r3, #10
 1081 0034 FB18     		add	r3, r7, r3
 1082 0036 1A80     		strh	r2, [r3]
 827:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 828:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_10UV_COUNTS) / ADC_SAR_Seq_countsPer10Volt[chan];
 1083              		.loc 1 828 0
 1084 0038 0A23     		mov	r3, #10
 1085 003a FB18     		add	r3, r7, r3
 1086 003c 1B88     		ldrh	r3, [r3]
 1087 003e 1BB2     		sxth	r3, r3
 1088 0040 3B60     		str	r3, [r7]
 1089 0042 DB17     		asr	r3, r3, #31
 1090 0044 7B60     		str	r3, [r7, #4]
 1091 0046 3868     		ldr	r0, [r7]
 1092 0048 7968     		ldr	r1, [r7, #4]
 1093 004a 0F4A     		ldr	r2, .L80+4
 1094 004c 0023     		mov	r3, #0
 1095 004e FFF7FEFF 		bl	__aeabi_lmul
 1096 0052 021C     		mov	r2, r0
 1097 0054 0B1C     		mov	r3, r1
 1098 0056 101C     		mov	r0, r2
 1099 0058 191C     		mov	r1, r3
 1100 005a 0C4B     		ldr	r3, .L80+8
 1101 005c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 35


 1102 005e 9200     		lsl	r2, r2, #2
 1103 0060 D358     		ldr	r3, [r2, r3]
 1104 0062 1C1C     		mov	r4, r3
 1105 0064 DB17     		asr	r3, r3, #31
 1106 0066 1D1C     		mov	r5, r3
 1107 0068 221C     		mov	r2, r4
 1108 006a 2B1C     		mov	r3, r5
 1109 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1110 0070 031C     		mov	r3, r0
 1111 0072 0C1C     		mov	r4, r1
 1112 0074 3B61     		str	r3, [r7, #16]
 1113 0076 7C61     		str	r4, [r7, #20]
 829:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 830:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( (int32)uVolts );
 1114              		.loc 1 830 0
 1115 0078 3B69     		ldr	r3, [r7, #16]
 831:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1116              		.loc 1 831 0
 1117 007a 181C     		mov	r0, r3
 1118 007c BD46     		mov	sp, r7
 1119 007e 06B0     		add	sp, sp, #24
 1120              		@ sp needed
 1121 0080 B0BD     		pop	{r4, r5, r7, pc}
 1122              	.L81:
 1123 0082 C046     		.align	2
 1124              	.L80:
 1125 0084 00000000 		.word	ADC_SAR_Seq_offset
 1126 0088 80969800 		.word	10000000
 1127 008c 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1128              		.cfi_endproc
 1129              	.LFE18:
 1130              		.size	ADC_SAR_Seq_CountsTo_uVolts, .-ADC_SAR_Seq_CountsTo_uVolts
 1131              		.global	__aeabi_i2f
 1132              		.global	__aeabi_fmul
 1133              		.global	__aeabi_fdiv
 1134              		.section	.text.ADC_SAR_Seq_CountsTo_Volts,"ax",%progbits
 1135              		.align	2
 1136              		.global	ADC_SAR_Seq_CountsTo_Volts
 1137              		.code	16
 1138              		.thumb_func
 1139              		.type	ADC_SAR_Seq_CountsTo_Volts, %function
 1140              	ADC_SAR_Seq_CountsTo_Volts:
 1141              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 833:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 834:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Function Name: ADC_SAR_Seq_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 838:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 842:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 36


 846:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 849:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *  ADC_SAR_Seq_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *
 854:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     float32 ADC_SAR_Seq_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     {
 1142              		.loc 1 856 0
 1143              		.cfi_startproc
 1144 0000 90B5     		push	{r4, r7, lr}
 1145              		.cfi_def_cfa_offset 12
 1146              		.cfi_offset 4, -12
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 85B0     		sub	sp, sp, #20
 1150              		.cfi_def_cfa_offset 32
 1151 0004 00AF     		add	r7, sp, #0
 1152              		.cfi_def_cfa_register 7
 1153 0006 7860     		str	r0, [r7, #4]
 1154 0008 0A1C     		mov	r2, r1
 1155 000a BB1C     		add	r3, r7, #2
 1156 000c 1A80     		strh	r2, [r3]
 857:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 859:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         CYASSERT(chan < ADC_SAR_Seq_TOTAL_CHANNELS_NUM);
 1157              		.loc 1 860 0
 1158 000e 7B68     		ldr	r3, [r7, #4]
 1159 0010 002B     		cmp	r3, #0
 1160 0012 02D0     		beq	.L83
 1161              		.loc 1 860 0 is_stmt 0 discriminator 1
 1162 0014 0020     		mov	r0, #0
 1163 0016 FFF7FEFF 		bl	CyHalt
 1164              	.L83:
 861:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 862:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #if(ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             if((ADC_SAR_Seq_channelsConfig[chan] & ADC_SAR_Seq_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             {
 866:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****                 adcCounts /= ADC_SAR_Seq_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****             }
 868:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         #endif /* ADC_SAR_Seq_DEFAULT_AVG_MODE == ADC_SAR_Seq__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 870:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         adcCounts -= ADC_SAR_Seq_offset[chan];
 1165              		.loc 1 871 0 is_stmt 1
 1166 001a 164B     		ldr	r3, .L85
 1167 001c 7A68     		ldr	r2, [r7, #4]
 1168 001e 5200     		lsl	r2, r2, #1
 1169 0020 D35A     		ldrh	r3, [r2, r3]
 1170 0022 99B2     		uxth	r1, r3
 1171 0024 BB1C     		add	r3, r7, #2
 1172 0026 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 37


 1173 0028 8BB2     		uxth	r3, r1
 1174 002a D31A     		sub	r3, r2, r3
 1175 002c 9AB2     		uxth	r2, r3
 1176 002e BB1C     		add	r3, r7, #2
 1177 0030 1A80     		strh	r2, [r3]
 872:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 873:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_10V_COUNTS) / (float32)ADC_SAR_Seq_countsPer10Vol
 1178              		.loc 1 873 0
 1179 0032 BB1C     		add	r3, r7, #2
 1180 0034 0022     		mov	r2, #0
 1181 0036 9B5E     		ldrsh	r3, [r3, r2]
 1182 0038 181C     		mov	r0, r3
 1183 003a FFF7FEFF 		bl	__aeabi_i2f
 1184 003e 031C     		add	r3, r0, #0
 1185 0040 181C     		add	r0, r3, #0
 1186 0042 0D49     		ldr	r1, .L85+4
 1187 0044 FFF7FEFF 		bl	__aeabi_fmul
 1188 0048 031C     		add	r3, r0, #0
 1189 004a 1C1C     		add	r4, r3, #0
 1190 004c 0B4B     		ldr	r3, .L85+8
 1191 004e 7A68     		ldr	r2, [r7, #4]
 1192 0050 9200     		lsl	r2, r2, #2
 1193 0052 D358     		ldr	r3, [r2, r3]
 1194 0054 181C     		mov	r0, r3
 1195 0056 FFF7FEFF 		bl	__aeabi_i2f
 1196 005a 031C     		add	r3, r0, #0
 1197 005c 201C     		add	r0, r4, #0
 1198 005e 191C     		add	r1, r3, #0
 1199 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1200 0064 031C     		add	r3, r0, #0
 1201 0066 FB60     		str	r3, [r7, #12]
 874:.\Generated_Source\PSoC4/ADC_SAR_Seq.c **** 
 875:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****         return( volts );
 1202              		.loc 1 875 0
 1203 0068 FB68     		ldr	r3, [r7, #12]
 876:.\Generated_Source\PSoC4/ADC_SAR_Seq.c ****     }
 1204              		.loc 1 876 0
 1205 006a 181C     		add	r0, r3, #0
 1206 006c BD46     		mov	sp, r7
 1207 006e 05B0     		add	sp, sp, #20
 1208              		@ sp needed
 1209 0070 90BD     		pop	{r4, r7, pc}
 1210              	.L86:
 1211 0072 C046     		.align	2
 1212              	.L85:
 1213 0074 00000000 		.word	ADC_SAR_Seq_offset
 1214 0078 00002041 		.word	1092616192
 1215 007c 00000000 		.word	ADC_SAR_Seq_countsPer10Volt
 1216              		.cfi_endproc
 1217              	.LFE19:
 1218              		.size	ADC_SAR_Seq_CountsTo_Volts, .-ADC_SAR_Seq_CountsTo_Volts
 1219              		.text
 1220              	.Letext0:
 1221              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1222              		.section	.debug_info,"",%progbits
 1223              	.Ldebug_info0:
 1224 0000 70040000 		.4byte	0x470
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 38


 1225 0004 0400     		.2byte	0x4
 1226 0006 00000000 		.4byte	.Ldebug_abbrev0
 1227 000a 04       		.byte	0x4
 1228 000b 01       		.uleb128 0x1
 1229 000c 06000000 		.4byte	.LASF59
 1230 0010 01       		.byte	0x1
 1231 0011 3A010000 		.4byte	.LASF60
 1232 0015 C6020000 		.4byte	.LASF61
 1233 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1234 001d 00000000 		.4byte	0
 1235 0021 00000000 		.4byte	.Ldebug_line0
 1236 0025 02       		.uleb128 0x2
 1237 0026 01       		.byte	0x1
 1238 0027 06       		.byte	0x6
 1239 0028 B7030000 		.4byte	.LASF0
 1240 002c 02       		.uleb128 0x2
 1241 002d 01       		.byte	0x1
 1242 002e 08       		.byte	0x8
 1243 002f EA010000 		.4byte	.LASF1
 1244 0033 02       		.uleb128 0x2
 1245 0034 02       		.byte	0x2
 1246 0035 05       		.byte	0x5
 1247 0036 F8000000 		.4byte	.LASF2
 1248 003a 02       		.uleb128 0x2
 1249 003b 02       		.byte	0x2
 1250 003c 07       		.byte	0x7
 1251 003d E5000000 		.4byte	.LASF3
 1252 0041 02       		.uleb128 0x2
 1253 0042 04       		.byte	0x4
 1254 0043 05       		.byte	0x5
 1255 0044 A9030000 		.4byte	.LASF4
 1256 0048 02       		.uleb128 0x2
 1257 0049 04       		.byte	0x4
 1258 004a 07       		.byte	0x7
 1259 004b B9010000 		.4byte	.LASF5
 1260 004f 02       		.uleb128 0x2
 1261 0050 08       		.byte	0x8
 1262 0051 05       		.byte	0x5
 1263 0052 39030000 		.4byte	.LASF6
 1264 0056 02       		.uleb128 0x2
 1265 0057 08       		.byte	0x8
 1266 0058 07       		.byte	0x7
 1267 0059 9D020000 		.4byte	.LASF7
 1268 005d 03       		.uleb128 0x3
 1269 005e 04       		.byte	0x4
 1270 005f 05       		.byte	0x5
 1271 0060 696E7400 		.ascii	"int\000"
 1272 0064 02       		.uleb128 0x2
 1273 0065 04       		.byte	0x4
 1274 0066 07       		.byte	0x7
 1275 0067 75020000 		.4byte	.LASF8
 1276 006b 04       		.uleb128 0x4
 1277 006c A3030000 		.4byte	.LASF9
 1278 0070 02       		.byte	0x2
 1279 0071 C2       		.byte	0xc2
 1280 0072 2C000000 		.4byte	0x2c
 1281 0076 04       		.uleb128 0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 39


 1282 0077 10020000 		.4byte	.LASF10
 1283 007b 02       		.byte	0x2
 1284 007c C3       		.byte	0xc3
 1285 007d 3A000000 		.4byte	0x3a
 1286 0081 04       		.uleb128 0x4
 1287 0082 21020000 		.4byte	.LASF11
 1288 0086 02       		.byte	0x2
 1289 0087 C4       		.byte	0xc4
 1290 0088 48000000 		.4byte	0x48
 1291 008c 04       		.uleb128 0x4
 1292 008d B3010000 		.4byte	.LASF12
 1293 0091 02       		.byte	0x2
 1294 0092 C6       		.byte	0xc6
 1295 0093 33000000 		.4byte	0x33
 1296 0097 04       		.uleb128 0x4
 1297 0098 CB010000 		.4byte	.LASF13
 1298 009c 02       		.byte	0x2
 1299 009d C7       		.byte	0xc7
 1300 009e 41000000 		.4byte	0x41
 1301 00a2 04       		.uleb128 0x4
 1302 00a3 61010000 		.4byte	.LASF14
 1303 00a7 02       		.byte	0x2
 1304 00a8 C8       		.byte	0xc8
 1305 00a9 AD000000 		.4byte	0xad
 1306 00ad 02       		.uleb128 0x2
 1307 00ae 04       		.byte	0x4
 1308 00af 04       		.byte	0x4
 1309 00b0 B7000000 		.4byte	.LASF15
 1310 00b4 02       		.uleb128 0x2
 1311 00b5 08       		.byte	0x8
 1312 00b6 04       		.byte	0x4
 1313 00b7 F8010000 		.4byte	.LASF16
 1314 00bb 04       		.uleb128 0x4
 1315 00bc 02040000 		.4byte	.LASF17
 1316 00c0 02       		.byte	0x2
 1317 00c1 CD       		.byte	0xcd
 1318 00c2 4F000000 		.4byte	0x4f
 1319 00c6 02       		.uleb128 0x2
 1320 00c7 01       		.byte	0x1
 1321 00c8 08       		.byte	0x8
 1322 00c9 B2030000 		.4byte	.LASF18
 1323 00cd 05       		.uleb128 0x5
 1324 00ce 00000000 		.4byte	.LASF19
 1325 00d2 02       		.byte	0x2
 1326 00d3 6E01     		.2byte	0x16e
 1327 00d5 D9000000 		.4byte	0xd9
 1328 00d9 06       		.uleb128 0x6
 1329 00da 81000000 		.4byte	0x81
 1330 00de 02       		.uleb128 0x2
 1331 00df 04       		.byte	0x4
 1332 00e0 07       		.byte	0x7
 1333 00e1 30030000 		.4byte	.LASF20
 1334 00e5 07       		.uleb128 0x7
 1335 00e6 B4020000 		.4byte	.LASF24
 1336 00ea 01       		.byte	0x1
 1337 00eb 3F       		.byte	0x3f
 1338 00ec 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 40


 1339 00f0 24000000 		.4byte	.LFE2-.LFB2
 1340 00f4 01       		.uleb128 0x1
 1341 00f5 9C       		.byte	0x9c
 1342 00f6 08       		.uleb128 0x8
 1343 00f7 F1030000 		.4byte	.LASF35
 1344 00fb 01       		.byte	0x1
 1345 00fc 5E       		.byte	0x5e
 1346 00fd 00000000 		.4byte	.LFB3
 1347 0101 C8010000 		.4byte	.LFE3-.LFB3
 1348 0105 01       		.uleb128 0x1
 1349 0106 9C       		.byte	0x9c
 1350 0107 36010000 		.4byte	0x136
 1351 010b 09       		.uleb128 0x9
 1352 010c 4C030000 		.4byte	.LASF21
 1353 0110 01       		.byte	0x1
 1354 0111 60       		.byte	0x60
 1355 0112 81000000 		.4byte	0x81
 1356 0116 02       		.uleb128 0x2
 1357 0117 91       		.byte	0x91
 1358 0118 74       		.sleb128 -12
 1359 0119 09       		.uleb128 0x9
 1360 011a 7C010000 		.4byte	.LASF22
 1361 011e 01       		.byte	0x1
 1362 011f 61       		.byte	0x61
 1363 0120 81000000 		.4byte	0x81
 1364 0124 02       		.uleb128 0x2
 1365 0125 91       		.byte	0x91
 1366 0126 6C       		.sleb128 -20
 1367 0127 09       		.uleb128 0x9
 1368 0128 96020000 		.4byte	.LASF23
 1369 012c 01       		.byte	0x1
 1370 012d 62       		.byte	0x62
 1371 012e 97000000 		.4byte	0x97
 1372 0132 02       		.uleb128 0x2
 1373 0133 91       		.byte	0x91
 1374 0134 70       		.sleb128 -16
 1375 0135 00       		.byte	0
 1376 0136 0A       		.uleb128 0xa
 1377 0137 69010000 		.4byte	.LASF25
 1378 013b 01       		.byte	0x1
 1379 013c 4A01     		.2byte	0x14a
 1380 013e 00000000 		.4byte	.LFB4
 1381 0142 38000000 		.4byte	.LFE4-.LFB4
 1382 0146 01       		.uleb128 0x1
 1383 0147 9C       		.byte	0x9c
 1384 0148 0B       		.uleb128 0xb
 1385 0149 86010000 		.4byte	.LASF26
 1386 014d 01       		.byte	0x1
 1387 014e 6D01     		.2byte	0x16d
 1388 0150 00000000 		.4byte	.LFB5
 1389 0154 18000000 		.4byte	.LFE5-.LFB5
 1390 0158 01       		.uleb128 0x1
 1391 0159 9C       		.byte	0x9c
 1392 015a 0B       		.uleb128 0xb
 1393 015b 5C020000 		.4byte	.LASF27
 1394 015f 01       		.byte	0x1
 1395 0160 8701     		.2byte	0x187
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 41


 1396 0162 00000000 		.4byte	.LFB6
 1397 0166 14000000 		.4byte	.LFE6-.LFB6
 1398 016a 01       		.uleb128 0x1
 1399 016b 9C       		.byte	0x9c
 1400 016c 0B       		.uleb128 0xb
 1401 016d 1B010000 		.4byte	.LASF28
 1402 0171 01       		.byte	0x1
 1403 0172 A001     		.2byte	0x1a0
 1404 0174 00000000 		.4byte	.LFB7
 1405 0178 08000000 		.4byte	.LFE7-.LFB7
 1406 017c 01       		.uleb128 0x1
 1407 017d 9C       		.byte	0x9c
 1408 017e 0C       		.uleb128 0xc
 1409 017f 97010000 		.4byte	.LASF30
 1410 0183 01       		.byte	0x1
 1411 0184 C201     		.2byte	0x1c2
 1412 0186 81000000 		.4byte	0x81
 1413 018a 00000000 		.4byte	.LFB8
 1414 018e 48000000 		.4byte	.LFE8-.LFB8
 1415 0192 01       		.uleb128 0x1
 1416 0193 9C       		.byte	0x9c
 1417 0194 B7010000 		.4byte	0x1b7
 1418 0198 0D       		.uleb128 0xd
 1419 0199 83030000 		.4byte	.LASF32
 1420 019d 01       		.byte	0x1
 1421 019e C201     		.2byte	0x1c2
 1422 01a0 81000000 		.4byte	0x81
 1423 01a4 02       		.uleb128 0x2
 1424 01a5 91       		.byte	0x91
 1425 01a6 6C       		.sleb128 -20
 1426 01a7 0E       		.uleb128 0xe
 1427 01a8 33010000 		.4byte	.LASF29
 1428 01ac 01       		.byte	0x1
 1429 01ad C401     		.2byte	0x1c4
 1430 01af 81000000 		.4byte	0x81
 1431 01b3 02       		.uleb128 0x2
 1432 01b4 91       		.byte	0x91
 1433 01b5 74       		.sleb128 -12
 1434 01b6 00       		.byte	0
 1435 01b7 0F       		.uleb128 0xf
 1436 01b8 28020000 		.4byte	.LASF31
 1437 01bc 01       		.byte	0x1
 1438 01bd F801     		.2byte	0x1f8
 1439 01bf 8C000000 		.4byte	0x8c
 1440 01c3 00000000 		.4byte	.LFB9
 1441 01c7 44000000 		.4byte	.LFE9-.LFB9
 1442 01cb 01       		.uleb128 0x1
 1443 01cc 9C       		.byte	0x9c
 1444 01cd F0010000 		.4byte	0x1f0
 1445 01d1 0D       		.uleb128 0xd
 1446 01d2 09030000 		.4byte	.LASF33
 1447 01d6 01       		.byte	0x1
 1448 01d7 F801     		.2byte	0x1f8
 1449 01d9 81000000 		.4byte	0x81
 1450 01dd 02       		.uleb128 0x2
 1451 01de 91       		.byte	0x91
 1452 01df 6C       		.sleb128 -20
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 42


 1453 01e0 0E       		.uleb128 0xe
 1454 01e1 EA030000 		.4byte	.LASF34
 1455 01e5 01       		.byte	0x1
 1456 01e6 FA01     		.2byte	0x1fa
 1457 01e8 81000000 		.4byte	0x81
 1458 01ec 02       		.uleb128 0x2
 1459 01ed 91       		.byte	0x91
 1460 01ee 74       		.sleb128 -12
 1461 01ef 00       		.byte	0
 1462 01f0 10       		.uleb128 0x10
 1463 01f1 8B030000 		.4byte	.LASF36
 1464 01f5 01       		.byte	0x1
 1465 01f6 2502     		.2byte	0x225
 1466 01f8 00000000 		.4byte	.LFB10
 1467 01fc 1C000000 		.4byte	.LFE10-.LFB10
 1468 0200 01       		.uleb128 0x1
 1469 0201 9C       		.byte	0x9c
 1470 0202 16020000 		.4byte	0x216
 1471 0206 0D       		.uleb128 0xd
 1472 0207 47030000 		.4byte	.LASF37
 1473 020b 01       		.byte	0x1
 1474 020c 2502     		.2byte	0x225
 1475 020e 81000000 		.4byte	0x81
 1476 0212 02       		.uleb128 0x2
 1477 0213 91       		.byte	0x91
 1478 0214 74       		.sleb128 -12
 1479 0215 00       		.byte	0
 1480 0216 10       		.uleb128 0x10
 1481 0217 08040000 		.4byte	.LASF38
 1482 021b 01       		.byte	0x1
 1483 021c 5102     		.2byte	0x251
 1484 021e 00000000 		.4byte	.LFB11
 1485 0222 30000000 		.4byte	.LFE11-.LFB11
 1486 0226 01       		.uleb128 0x1
 1487 0227 9C       		.byte	0x9c
 1488 0228 3C020000 		.4byte	0x23c
 1489 022c 0D       		.uleb128 0xd
 1490 022d FF010000 		.4byte	.LASF39
 1491 0231 01       		.byte	0x1
 1492 0232 5102     		.2byte	0x251
 1493 0234 81000000 		.4byte	0x81
 1494 0238 02       		.uleb128 0x2
 1495 0239 91       		.byte	0x91
 1496 023a 74       		.sleb128 -12
 1497 023b 00       		.byte	0
 1498 023c 10       		.uleb128 0x10
 1499 023d 02010000 		.4byte	.LASF40
 1500 0241 01       		.byte	0x1
 1501 0242 6602     		.2byte	0x266
 1502 0244 00000000 		.4byte	.LFB12
 1503 0248 2C000000 		.4byte	.LFE12-.LFB12
 1504 024c 01       		.uleb128 0x1
 1505 024d 9C       		.byte	0x9c
 1506 024e 62020000 		.4byte	0x262
 1507 0252 0D       		.uleb128 0xd
 1508 0253 BD000000 		.4byte	.LASF41
 1509 0257 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 43


 1510 0258 6602     		.2byte	0x266
 1511 025a 81000000 		.4byte	0x81
 1512 025e 02       		.uleb128 0x2
 1513 025f 91       		.byte	0x91
 1514 0260 74       		.sleb128 -12
 1515 0261 00       		.byte	0
 1516 0262 10       		.uleb128 0x10
 1517 0263 D1010000 		.4byte	.LASF42
 1518 0267 01       		.byte	0x1
 1519 0268 7E02     		.2byte	0x27e
 1520 026a 00000000 		.4byte	.LFB13
 1521 026e 1C000000 		.4byte	.LFE13-.LFB13
 1522 0272 01       		.uleb128 0x1
 1523 0273 9C       		.byte	0x9c
 1524 0274 88020000 		.4byte	0x288
 1525 0278 0D       		.uleb128 0xd
 1526 0279 47030000 		.4byte	.LASF37
 1527 027d 01       		.byte	0x1
 1528 027e 7E02     		.2byte	0x27e
 1529 0280 81000000 		.4byte	0x81
 1530 0284 02       		.uleb128 0x2
 1531 0285 91       		.byte	0x91
 1532 0286 74       		.sleb128 -12
 1533 0287 00       		.byte	0
 1534 0288 10       		.uleb128 0x10
 1535 0289 C7000000 		.4byte	.LASF43
 1536 028d 01       		.byte	0x1
 1537 028e 9502     		.2byte	0x295
 1538 0290 00000000 		.4byte	.LFB14
 1539 0294 1C000000 		.4byte	.LFE14-.LFB14
 1540 0298 01       		.uleb128 0x1
 1541 0299 9C       		.byte	0x9c
 1542 029a AE020000 		.4byte	0x2ae
 1543 029e 0D       		.uleb128 0xd
 1544 029f 47030000 		.4byte	.LASF37
 1545 02a3 01       		.byte	0x1
 1546 02a4 9502     		.2byte	0x295
 1547 02a6 81000000 		.4byte	0x81
 1548 02aa 02       		.uleb128 0x2
 1549 02ab 91       		.byte	0x91
 1550 02ac 74       		.sleb128 -12
 1551 02ad 00       		.byte	0
 1552 02ae 11       		.uleb128 0x11
 1553 02af 52030000 		.4byte	.LASF44
 1554 02b3 01       		.byte	0x1
 1555 02b4 B102     		.2byte	0x2b1
 1556 02b6 00000000 		.4byte	.LFB15
 1557 02ba 30000000 		.4byte	.LFE15-.LFB15
 1558 02be 01       		.uleb128 0x1
 1559 02bf 9C       		.byte	0x9c
 1560 02c0 E3020000 		.4byte	0x2e3
 1561 02c4 0D       		.uleb128 0xd
 1562 02c5 09030000 		.4byte	.LASF33
 1563 02c9 01       		.byte	0x1
 1564 02ca B102     		.2byte	0x2b1
 1565 02cc 81000000 		.4byte	0x81
 1566 02d0 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 44


 1567 02d1 91       		.byte	0x91
 1568 02d2 74       		.sleb128 -12
 1569 02d3 0D       		.uleb128 0xd
 1570 02d4 94000000 		.4byte	.LASF45
 1571 02d8 01       		.byte	0x1
 1572 02d9 B102     		.2byte	0x2b1
 1573 02db 8C000000 		.4byte	0x8c
 1574 02df 02       		.uleb128 0x2
 1575 02e0 91       		.byte	0x91
 1576 02e1 72       		.sleb128 -14
 1577 02e2 00       		.byte	0
 1578 02e3 11       		.uleb128 0x11
 1579 02e4 D6030000 		.4byte	.LASF46
 1580 02e8 01       		.byte	0x1
 1581 02e9 D302     		.2byte	0x2d3
 1582 02eb 00000000 		.4byte	.LFB16
 1583 02ef 2C000000 		.4byte	.LFE16-.LFB16
 1584 02f3 01       		.uleb128 0x1
 1585 02f4 9C       		.byte	0x9c
 1586 02f5 18030000 		.4byte	0x318
 1587 02f9 0D       		.uleb128 0xd
 1588 02fa 09030000 		.4byte	.LASF33
 1589 02fe 01       		.byte	0x1
 1590 02ff D302     		.2byte	0x2d3
 1591 0301 81000000 		.4byte	0x81
 1592 0305 02       		.uleb128 0x2
 1593 0306 91       		.byte	0x91
 1594 0307 74       		.sleb128 -12
 1595 0308 0D       		.uleb128 0xd
 1596 0309 08020000 		.4byte	.LASF47
 1597 030d 01       		.byte	0x1
 1598 030e D302     		.2byte	0x2d3
 1599 0310 97000000 		.4byte	0x97
 1600 0314 02       		.uleb128 0x2
 1601 0315 91       		.byte	0x91
 1602 0316 70       		.sleb128 -16
 1603 0317 00       		.byte	0
 1604 0318 0F       		.uleb128 0xf
 1605 0319 9B000000 		.4byte	.LASF48
 1606 031d 01       		.byte	0x1
 1607 031e F402     		.2byte	0x2f4
 1608 0320 8C000000 		.4byte	0x8c
 1609 0324 00000000 		.4byte	.LFB17
 1610 0328 A4000000 		.4byte	.LFE17-.LFB17
 1611 032c 01       		.uleb128 0x1
 1612 032d 9C       		.byte	0x9c
 1613 032e 60030000 		.4byte	0x360
 1614 0332 0D       		.uleb128 0xd
 1615 0333 09030000 		.4byte	.LASF33
 1616 0337 01       		.byte	0x1
 1617 0338 F402     		.2byte	0x2f4
 1618 033a 81000000 		.4byte	0x81
 1619 033e 02       		.uleb128 0x2
 1620 033f 91       		.byte	0x91
 1621 0340 6C       		.sleb128 -20
 1622 0341 0D       		.uleb128 0xd
 1623 0342 17020000 		.4byte	.LASF49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 45


 1624 0346 01       		.byte	0x1
 1625 0347 F402     		.2byte	0x2f4
 1626 0349 8C000000 		.4byte	0x8c
 1627 034d 02       		.uleb128 0x2
 1628 034e 91       		.byte	0x91
 1629 034f 6A       		.sleb128 -22
 1630 0350 0E       		.uleb128 0xe
 1631 0351 0E030000 		.4byte	.LASF50
 1632 0355 01       		.byte	0x1
 1633 0356 F602     		.2byte	0x2f6
 1634 0358 8C000000 		.4byte	0x8c
 1635 035c 02       		.uleb128 0x2
 1636 035d 91       		.byte	0x91
 1637 035e 76       		.sleb128 -10
 1638 035f 00       		.byte	0
 1639 0360 0F       		.uleb128 0xf
 1640 0361 E7020000 		.4byte	.LASF51
 1641 0365 01       		.byte	0x1
 1642 0366 2A03     		.2byte	0x32a
 1643 0368 97000000 		.4byte	0x97
 1644 036c 00000000 		.4byte	.LFB18
 1645 0370 90000000 		.4byte	.LFE18-.LFB18
 1646 0374 01       		.uleb128 0x1
 1647 0375 9C       		.byte	0x9c
 1648 0376 A8030000 		.4byte	0x3a8
 1649 037a 0D       		.uleb128 0xd
 1650 037b 09030000 		.4byte	.LASF33
 1651 037f 01       		.byte	0x1
 1652 0380 2A03     		.2byte	0x32a
 1653 0382 81000000 		.4byte	0x81
 1654 0386 02       		.uleb128 0x2
 1655 0387 91       		.byte	0x91
 1656 0388 64       		.sleb128 -28
 1657 0389 0D       		.uleb128 0xd
 1658 038a 17020000 		.4byte	.LASF49
 1659 038e 01       		.byte	0x1
 1660 038f 2A03     		.2byte	0x32a
 1661 0391 8C000000 		.4byte	0x8c
 1662 0395 02       		.uleb128 0x2
 1663 0396 91       		.byte	0x91
 1664 0397 62       		.sleb128 -30
 1665 0398 0E       		.uleb128 0xe
 1666 0399 DE000000 		.4byte	.LASF52
 1667 039d 01       		.byte	0x1
 1668 039e 2C03     		.2byte	0x32c
 1669 03a0 BB000000 		.4byte	0xbb
 1670 03a4 02       		.uleb128 0x2
 1671 03a5 91       		.byte	0x91
 1672 03a6 68       		.sleb128 -24
 1673 03a7 00       		.byte	0
 1674 03a8 0F       		.uleb128 0xf
 1675 03a9 68030000 		.4byte	.LASF53
 1676 03ad 01       		.byte	0x1
 1677 03ae 5703     		.2byte	0x357
 1678 03b0 A2000000 		.4byte	0xa2
 1679 03b4 00000000 		.4byte	.LFB19
 1680 03b8 80000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 46


 1681 03bc 01       		.uleb128 0x1
 1682 03bd 9C       		.byte	0x9c
 1683 03be F0030000 		.4byte	0x3f0
 1684 03c2 0D       		.uleb128 0xd
 1685 03c3 09030000 		.4byte	.LASF33
 1686 03c7 01       		.byte	0x1
 1687 03c8 5703     		.2byte	0x357
 1688 03ca 81000000 		.4byte	0x81
 1689 03ce 02       		.uleb128 0x2
 1690 03cf 91       		.byte	0x91
 1691 03d0 64       		.sleb128 -28
 1692 03d1 0D       		.uleb128 0xd
 1693 03d2 17020000 		.4byte	.LASF49
 1694 03d6 01       		.byte	0x1
 1695 03d7 5703     		.2byte	0x357
 1696 03d9 8C000000 		.4byte	0x8c
 1697 03dd 02       		.uleb128 0x2
 1698 03de 91       		.byte	0x91
 1699 03df 62       		.sleb128 -30
 1700 03e0 0E       		.uleb128 0xe
 1701 03e1 03030000 		.4byte	.LASF54
 1702 03e5 01       		.byte	0x1
 1703 03e6 5903     		.2byte	0x359
 1704 03e8 A2000000 		.4byte	0xa2
 1705 03ec 02       		.uleb128 0x2
 1706 03ed 91       		.byte	0x91
 1707 03ee 6C       		.sleb128 -20
 1708 03ef 00       		.byte	0
 1709 03f0 12       		.uleb128 0x12
 1710 03f1 81000000 		.4byte	0x81
 1711 03f5 00040000 		.4byte	0x400
 1712 03f9 13       		.uleb128 0x13
 1713 03fa DE000000 		.4byte	0xde
 1714 03fe 00       		.byte	0
 1715 03ff 00       		.byte	0
 1716 0400 09       		.uleb128 0x9
 1717 0401 15030000 		.4byte	.LASF55
 1718 0405 01       		.byte	0x1
 1719 0406 21       		.byte	0x21
 1720 0407 11040000 		.4byte	0x411
 1721 040b 05       		.uleb128 0x5
 1722 040c 03       		.byte	0x3
 1723 040d 00000000 		.4byte	ADC_SAR_Seq_channelsConfig
 1724 0411 14       		.uleb128 0x14
 1725 0412 F0030000 		.4byte	0x3f0
 1726 0416 15       		.uleb128 0x15
 1727 0417 82020000 		.4byte	.LASF56
 1728 041b 01       		.byte	0x1
 1729 041c 18       		.byte	0x18
 1730 041d 6B000000 		.4byte	0x6b
 1731 0421 05       		.uleb128 0x5
 1732 0422 03       		.byte	0x3
 1733 0423 00000000 		.4byte	ADC_SAR_Seq_initVar
 1734 0427 12       		.uleb128 0x12
 1735 0428 8C000000 		.4byte	0x8c
 1736 042c 37040000 		.4byte	0x437
 1737 0430 13       		.uleb128 0x13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 47


 1738 0431 DE000000 		.4byte	0xde
 1739 0435 00       		.byte	0
 1740 0436 00       		.byte	0
 1741 0437 15       		.uleb128 0x15
 1742 0438 C3030000 		.4byte	.LASF57
 1743 043c 01       		.byte	0x1
 1744 043d 19       		.byte	0x19
 1745 043e 48040000 		.4byte	0x448
 1746 0442 05       		.uleb128 0x5
 1747 0443 03       		.byte	0x3
 1748 0444 00000000 		.4byte	ADC_SAR_Seq_offset
 1749 0448 06       		.uleb128 0x6
 1750 0449 27040000 		.4byte	0x427
 1751 044d 12       		.uleb128 0x12
 1752 044e 97000000 		.4byte	0x97
 1753 0452 5D040000 		.4byte	0x45d
 1754 0456 13       		.uleb128 0x13
 1755 0457 DE000000 		.4byte	0xde
 1756 045b 00       		.byte	0
 1757 045c 00       		.byte	0
 1758 045d 15       		.uleb128 0x15
 1759 045e 40020000 		.4byte	.LASF58
 1760 0462 01       		.byte	0x1
 1761 0463 1A       		.byte	0x1a
 1762 0464 6E040000 		.4byte	0x46e
 1763 0468 05       		.uleb128 0x5
 1764 0469 03       		.byte	0x3
 1765 046a 00000000 		.4byte	ADC_SAR_Seq_countsPer10Volt
 1766 046e 06       		.uleb128 0x6
 1767 046f 4D040000 		.4byte	0x44d
 1768 0473 00       		.byte	0
 1769              		.section	.debug_abbrev,"",%progbits
 1770              	.Ldebug_abbrev0:
 1771 0000 01       		.uleb128 0x1
 1772 0001 11       		.uleb128 0x11
 1773 0002 01       		.byte	0x1
 1774 0003 25       		.uleb128 0x25
 1775 0004 0E       		.uleb128 0xe
 1776 0005 13       		.uleb128 0x13
 1777 0006 0B       		.uleb128 0xb
 1778 0007 03       		.uleb128 0x3
 1779 0008 0E       		.uleb128 0xe
 1780 0009 1B       		.uleb128 0x1b
 1781 000a 0E       		.uleb128 0xe
 1782 000b 55       		.uleb128 0x55
 1783 000c 17       		.uleb128 0x17
 1784 000d 11       		.uleb128 0x11
 1785 000e 01       		.uleb128 0x1
 1786 000f 10       		.uleb128 0x10
 1787 0010 17       		.uleb128 0x17
 1788 0011 00       		.byte	0
 1789 0012 00       		.byte	0
 1790 0013 02       		.uleb128 0x2
 1791 0014 24       		.uleb128 0x24
 1792 0015 00       		.byte	0
 1793 0016 0B       		.uleb128 0xb
 1794 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 48


 1795 0018 3E       		.uleb128 0x3e
 1796 0019 0B       		.uleb128 0xb
 1797 001a 03       		.uleb128 0x3
 1798 001b 0E       		.uleb128 0xe
 1799 001c 00       		.byte	0
 1800 001d 00       		.byte	0
 1801 001e 03       		.uleb128 0x3
 1802 001f 24       		.uleb128 0x24
 1803 0020 00       		.byte	0
 1804 0021 0B       		.uleb128 0xb
 1805 0022 0B       		.uleb128 0xb
 1806 0023 3E       		.uleb128 0x3e
 1807 0024 0B       		.uleb128 0xb
 1808 0025 03       		.uleb128 0x3
 1809 0026 08       		.uleb128 0x8
 1810 0027 00       		.byte	0
 1811 0028 00       		.byte	0
 1812 0029 04       		.uleb128 0x4
 1813 002a 16       		.uleb128 0x16
 1814 002b 00       		.byte	0
 1815 002c 03       		.uleb128 0x3
 1816 002d 0E       		.uleb128 0xe
 1817 002e 3A       		.uleb128 0x3a
 1818 002f 0B       		.uleb128 0xb
 1819 0030 3B       		.uleb128 0x3b
 1820 0031 0B       		.uleb128 0xb
 1821 0032 49       		.uleb128 0x49
 1822 0033 13       		.uleb128 0x13
 1823 0034 00       		.byte	0
 1824 0035 00       		.byte	0
 1825 0036 05       		.uleb128 0x5
 1826 0037 16       		.uleb128 0x16
 1827 0038 00       		.byte	0
 1828 0039 03       		.uleb128 0x3
 1829 003a 0E       		.uleb128 0xe
 1830 003b 3A       		.uleb128 0x3a
 1831 003c 0B       		.uleb128 0xb
 1832 003d 3B       		.uleb128 0x3b
 1833 003e 05       		.uleb128 0x5
 1834 003f 49       		.uleb128 0x49
 1835 0040 13       		.uleb128 0x13
 1836 0041 00       		.byte	0
 1837 0042 00       		.byte	0
 1838 0043 06       		.uleb128 0x6
 1839 0044 35       		.uleb128 0x35
 1840 0045 00       		.byte	0
 1841 0046 49       		.uleb128 0x49
 1842 0047 13       		.uleb128 0x13
 1843 0048 00       		.byte	0
 1844 0049 00       		.byte	0
 1845 004a 07       		.uleb128 0x7
 1846 004b 2E       		.uleb128 0x2e
 1847 004c 00       		.byte	0
 1848 004d 3F       		.uleb128 0x3f
 1849 004e 19       		.uleb128 0x19
 1850 004f 03       		.uleb128 0x3
 1851 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 49


 1852 0051 3A       		.uleb128 0x3a
 1853 0052 0B       		.uleb128 0xb
 1854 0053 3B       		.uleb128 0x3b
 1855 0054 0B       		.uleb128 0xb
 1856 0055 27       		.uleb128 0x27
 1857 0056 19       		.uleb128 0x19
 1858 0057 11       		.uleb128 0x11
 1859 0058 01       		.uleb128 0x1
 1860 0059 12       		.uleb128 0x12
 1861 005a 06       		.uleb128 0x6
 1862 005b 40       		.uleb128 0x40
 1863 005c 18       		.uleb128 0x18
 1864 005d 9642     		.uleb128 0x2116
 1865 005f 19       		.uleb128 0x19
 1866 0060 00       		.byte	0
 1867 0061 00       		.byte	0
 1868 0062 08       		.uleb128 0x8
 1869 0063 2E       		.uleb128 0x2e
 1870 0064 01       		.byte	0x1
 1871 0065 3F       		.uleb128 0x3f
 1872 0066 19       		.uleb128 0x19
 1873 0067 03       		.uleb128 0x3
 1874 0068 0E       		.uleb128 0xe
 1875 0069 3A       		.uleb128 0x3a
 1876 006a 0B       		.uleb128 0xb
 1877 006b 3B       		.uleb128 0x3b
 1878 006c 0B       		.uleb128 0xb
 1879 006d 27       		.uleb128 0x27
 1880 006e 19       		.uleb128 0x19
 1881 006f 11       		.uleb128 0x11
 1882 0070 01       		.uleb128 0x1
 1883 0071 12       		.uleb128 0x12
 1884 0072 06       		.uleb128 0x6
 1885 0073 40       		.uleb128 0x40
 1886 0074 18       		.uleb128 0x18
 1887 0075 9642     		.uleb128 0x2116
 1888 0077 19       		.uleb128 0x19
 1889 0078 01       		.uleb128 0x1
 1890 0079 13       		.uleb128 0x13
 1891 007a 00       		.byte	0
 1892 007b 00       		.byte	0
 1893 007c 09       		.uleb128 0x9
 1894 007d 34       		.uleb128 0x34
 1895 007e 00       		.byte	0
 1896 007f 03       		.uleb128 0x3
 1897 0080 0E       		.uleb128 0xe
 1898 0081 3A       		.uleb128 0x3a
 1899 0082 0B       		.uleb128 0xb
 1900 0083 3B       		.uleb128 0x3b
 1901 0084 0B       		.uleb128 0xb
 1902 0085 49       		.uleb128 0x49
 1903 0086 13       		.uleb128 0x13
 1904 0087 02       		.uleb128 0x2
 1905 0088 18       		.uleb128 0x18
 1906 0089 00       		.byte	0
 1907 008a 00       		.byte	0
 1908 008b 0A       		.uleb128 0xa
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 50


 1909 008c 2E       		.uleb128 0x2e
 1910 008d 00       		.byte	0
 1911 008e 3F       		.uleb128 0x3f
 1912 008f 19       		.uleb128 0x19
 1913 0090 03       		.uleb128 0x3
 1914 0091 0E       		.uleb128 0xe
 1915 0092 3A       		.uleb128 0x3a
 1916 0093 0B       		.uleb128 0xb
 1917 0094 3B       		.uleb128 0x3b
 1918 0095 05       		.uleb128 0x5
 1919 0096 27       		.uleb128 0x27
 1920 0097 19       		.uleb128 0x19
 1921 0098 11       		.uleb128 0x11
 1922 0099 01       		.uleb128 0x1
 1923 009a 12       		.uleb128 0x12
 1924 009b 06       		.uleb128 0x6
 1925 009c 40       		.uleb128 0x40
 1926 009d 18       		.uleb128 0x18
 1927 009e 9642     		.uleb128 0x2116
 1928 00a0 19       		.uleb128 0x19
 1929 00a1 00       		.byte	0
 1930 00a2 00       		.byte	0
 1931 00a3 0B       		.uleb128 0xb
 1932 00a4 2E       		.uleb128 0x2e
 1933 00a5 00       		.byte	0
 1934 00a6 3F       		.uleb128 0x3f
 1935 00a7 19       		.uleb128 0x19
 1936 00a8 03       		.uleb128 0x3
 1937 00a9 0E       		.uleb128 0xe
 1938 00aa 3A       		.uleb128 0x3a
 1939 00ab 0B       		.uleb128 0xb
 1940 00ac 3B       		.uleb128 0x3b
 1941 00ad 05       		.uleb128 0x5
 1942 00ae 27       		.uleb128 0x27
 1943 00af 19       		.uleb128 0x19
 1944 00b0 11       		.uleb128 0x11
 1945 00b1 01       		.uleb128 0x1
 1946 00b2 12       		.uleb128 0x12
 1947 00b3 06       		.uleb128 0x6
 1948 00b4 40       		.uleb128 0x40
 1949 00b5 18       		.uleb128 0x18
 1950 00b6 9742     		.uleb128 0x2117
 1951 00b8 19       		.uleb128 0x19
 1952 00b9 00       		.byte	0
 1953 00ba 00       		.byte	0
 1954 00bb 0C       		.uleb128 0xc
 1955 00bc 2E       		.uleb128 0x2e
 1956 00bd 01       		.byte	0x1
 1957 00be 3F       		.uleb128 0x3f
 1958 00bf 19       		.uleb128 0x19
 1959 00c0 03       		.uleb128 0x3
 1960 00c1 0E       		.uleb128 0xe
 1961 00c2 3A       		.uleb128 0x3a
 1962 00c3 0B       		.uleb128 0xb
 1963 00c4 3B       		.uleb128 0x3b
 1964 00c5 05       		.uleb128 0x5
 1965 00c6 27       		.uleb128 0x27
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 51


 1966 00c7 19       		.uleb128 0x19
 1967 00c8 49       		.uleb128 0x49
 1968 00c9 13       		.uleb128 0x13
 1969 00ca 11       		.uleb128 0x11
 1970 00cb 01       		.uleb128 0x1
 1971 00cc 12       		.uleb128 0x12
 1972 00cd 06       		.uleb128 0x6
 1973 00ce 40       		.uleb128 0x40
 1974 00cf 18       		.uleb128 0x18
 1975 00d0 9742     		.uleb128 0x2117
 1976 00d2 19       		.uleb128 0x19
 1977 00d3 01       		.uleb128 0x1
 1978 00d4 13       		.uleb128 0x13
 1979 00d5 00       		.byte	0
 1980 00d6 00       		.byte	0
 1981 00d7 0D       		.uleb128 0xd
 1982 00d8 05       		.uleb128 0x5
 1983 00d9 00       		.byte	0
 1984 00da 03       		.uleb128 0x3
 1985 00db 0E       		.uleb128 0xe
 1986 00dc 3A       		.uleb128 0x3a
 1987 00dd 0B       		.uleb128 0xb
 1988 00de 3B       		.uleb128 0x3b
 1989 00df 05       		.uleb128 0x5
 1990 00e0 49       		.uleb128 0x49
 1991 00e1 13       		.uleb128 0x13
 1992 00e2 02       		.uleb128 0x2
 1993 00e3 18       		.uleb128 0x18
 1994 00e4 00       		.byte	0
 1995 00e5 00       		.byte	0
 1996 00e6 0E       		.uleb128 0xe
 1997 00e7 34       		.uleb128 0x34
 1998 00e8 00       		.byte	0
 1999 00e9 03       		.uleb128 0x3
 2000 00ea 0E       		.uleb128 0xe
 2001 00eb 3A       		.uleb128 0x3a
 2002 00ec 0B       		.uleb128 0xb
 2003 00ed 3B       		.uleb128 0x3b
 2004 00ee 05       		.uleb128 0x5
 2005 00ef 49       		.uleb128 0x49
 2006 00f0 13       		.uleb128 0x13
 2007 00f1 02       		.uleb128 0x2
 2008 00f2 18       		.uleb128 0x18
 2009 00f3 00       		.byte	0
 2010 00f4 00       		.byte	0
 2011 00f5 0F       		.uleb128 0xf
 2012 00f6 2E       		.uleb128 0x2e
 2013 00f7 01       		.byte	0x1
 2014 00f8 3F       		.uleb128 0x3f
 2015 00f9 19       		.uleb128 0x19
 2016 00fa 03       		.uleb128 0x3
 2017 00fb 0E       		.uleb128 0xe
 2018 00fc 3A       		.uleb128 0x3a
 2019 00fd 0B       		.uleb128 0xb
 2020 00fe 3B       		.uleb128 0x3b
 2021 00ff 05       		.uleb128 0x5
 2022 0100 27       		.uleb128 0x27
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 52


 2023 0101 19       		.uleb128 0x19
 2024 0102 49       		.uleb128 0x49
 2025 0103 13       		.uleb128 0x13
 2026 0104 11       		.uleb128 0x11
 2027 0105 01       		.uleb128 0x1
 2028 0106 12       		.uleb128 0x12
 2029 0107 06       		.uleb128 0x6
 2030 0108 40       		.uleb128 0x40
 2031 0109 18       		.uleb128 0x18
 2032 010a 9642     		.uleb128 0x2116
 2033 010c 19       		.uleb128 0x19
 2034 010d 01       		.uleb128 0x1
 2035 010e 13       		.uleb128 0x13
 2036 010f 00       		.byte	0
 2037 0110 00       		.byte	0
 2038 0111 10       		.uleb128 0x10
 2039 0112 2E       		.uleb128 0x2e
 2040 0113 01       		.byte	0x1
 2041 0114 3F       		.uleb128 0x3f
 2042 0115 19       		.uleb128 0x19
 2043 0116 03       		.uleb128 0x3
 2044 0117 0E       		.uleb128 0xe
 2045 0118 3A       		.uleb128 0x3a
 2046 0119 0B       		.uleb128 0xb
 2047 011a 3B       		.uleb128 0x3b
 2048 011b 05       		.uleb128 0x5
 2049 011c 27       		.uleb128 0x27
 2050 011d 19       		.uleb128 0x19
 2051 011e 11       		.uleb128 0x11
 2052 011f 01       		.uleb128 0x1
 2053 0120 12       		.uleb128 0x12
 2054 0121 06       		.uleb128 0x6
 2055 0122 40       		.uleb128 0x40
 2056 0123 18       		.uleb128 0x18
 2057 0124 9742     		.uleb128 0x2117
 2058 0126 19       		.uleb128 0x19
 2059 0127 01       		.uleb128 0x1
 2060 0128 13       		.uleb128 0x13
 2061 0129 00       		.byte	0
 2062 012a 00       		.byte	0
 2063 012b 11       		.uleb128 0x11
 2064 012c 2E       		.uleb128 0x2e
 2065 012d 01       		.byte	0x1
 2066 012e 3F       		.uleb128 0x3f
 2067 012f 19       		.uleb128 0x19
 2068 0130 03       		.uleb128 0x3
 2069 0131 0E       		.uleb128 0xe
 2070 0132 3A       		.uleb128 0x3a
 2071 0133 0B       		.uleb128 0xb
 2072 0134 3B       		.uleb128 0x3b
 2073 0135 05       		.uleb128 0x5
 2074 0136 27       		.uleb128 0x27
 2075 0137 19       		.uleb128 0x19
 2076 0138 11       		.uleb128 0x11
 2077 0139 01       		.uleb128 0x1
 2078 013a 12       		.uleb128 0x12
 2079 013b 06       		.uleb128 0x6
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 53


 2080 013c 40       		.uleb128 0x40
 2081 013d 18       		.uleb128 0x18
 2082 013e 9642     		.uleb128 0x2116
 2083 0140 19       		.uleb128 0x19
 2084 0141 01       		.uleb128 0x1
 2085 0142 13       		.uleb128 0x13
 2086 0143 00       		.byte	0
 2087 0144 00       		.byte	0
 2088 0145 12       		.uleb128 0x12
 2089 0146 01       		.uleb128 0x1
 2090 0147 01       		.byte	0x1
 2091 0148 49       		.uleb128 0x49
 2092 0149 13       		.uleb128 0x13
 2093 014a 01       		.uleb128 0x1
 2094 014b 13       		.uleb128 0x13
 2095 014c 00       		.byte	0
 2096 014d 00       		.byte	0
 2097 014e 13       		.uleb128 0x13
 2098 014f 21       		.uleb128 0x21
 2099 0150 00       		.byte	0
 2100 0151 49       		.uleb128 0x49
 2101 0152 13       		.uleb128 0x13
 2102 0153 2F       		.uleb128 0x2f
 2103 0154 0B       		.uleb128 0xb
 2104 0155 00       		.byte	0
 2105 0156 00       		.byte	0
 2106 0157 14       		.uleb128 0x14
 2107 0158 26       		.uleb128 0x26
 2108 0159 00       		.byte	0
 2109 015a 49       		.uleb128 0x49
 2110 015b 13       		.uleb128 0x13
 2111 015c 00       		.byte	0
 2112 015d 00       		.byte	0
 2113 015e 15       		.uleb128 0x15
 2114 015f 34       		.uleb128 0x34
 2115 0160 00       		.byte	0
 2116 0161 03       		.uleb128 0x3
 2117 0162 0E       		.uleb128 0xe
 2118 0163 3A       		.uleb128 0x3a
 2119 0164 0B       		.uleb128 0xb
 2120 0165 3B       		.uleb128 0x3b
 2121 0166 0B       		.uleb128 0xb
 2122 0167 49       		.uleb128 0x49
 2123 0168 13       		.uleb128 0x13
 2124 0169 3F       		.uleb128 0x3f
 2125 016a 19       		.uleb128 0x19
 2126 016b 02       		.uleb128 0x2
 2127 016c 18       		.uleb128 0x18
 2128 016d 00       		.byte	0
 2129 016e 00       		.byte	0
 2130 016f 00       		.byte	0
 2131              		.section	.debug_aranges,"",%progbits
 2132 0000 A4000000 		.4byte	0xa4
 2133 0004 0200     		.2byte	0x2
 2134 0006 00000000 		.4byte	.Ldebug_info0
 2135 000a 04       		.byte	0x4
 2136 000b 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 54


 2137 000c 0000     		.2byte	0
 2138 000e 0000     		.2byte	0
 2139 0010 00000000 		.4byte	.LFB2
 2140 0014 24000000 		.4byte	.LFE2-.LFB2
 2141 0018 00000000 		.4byte	.LFB3
 2142 001c C8010000 		.4byte	.LFE3-.LFB3
 2143 0020 00000000 		.4byte	.LFB4
 2144 0024 38000000 		.4byte	.LFE4-.LFB4
 2145 0028 00000000 		.4byte	.LFB5
 2146 002c 18000000 		.4byte	.LFE5-.LFB5
 2147 0030 00000000 		.4byte	.LFB6
 2148 0034 14000000 		.4byte	.LFE6-.LFB6
 2149 0038 00000000 		.4byte	.LFB7
 2150 003c 08000000 		.4byte	.LFE7-.LFB7
 2151 0040 00000000 		.4byte	.LFB8
 2152 0044 48000000 		.4byte	.LFE8-.LFB8
 2153 0048 00000000 		.4byte	.LFB9
 2154 004c 44000000 		.4byte	.LFE9-.LFB9
 2155 0050 00000000 		.4byte	.LFB10
 2156 0054 1C000000 		.4byte	.LFE10-.LFB10
 2157 0058 00000000 		.4byte	.LFB11
 2158 005c 30000000 		.4byte	.LFE11-.LFB11
 2159 0060 00000000 		.4byte	.LFB12
 2160 0064 2C000000 		.4byte	.LFE12-.LFB12
 2161 0068 00000000 		.4byte	.LFB13
 2162 006c 1C000000 		.4byte	.LFE13-.LFB13
 2163 0070 00000000 		.4byte	.LFB14
 2164 0074 1C000000 		.4byte	.LFE14-.LFB14
 2165 0078 00000000 		.4byte	.LFB15
 2166 007c 30000000 		.4byte	.LFE15-.LFB15
 2167 0080 00000000 		.4byte	.LFB16
 2168 0084 2C000000 		.4byte	.LFE16-.LFB16
 2169 0088 00000000 		.4byte	.LFB17
 2170 008c A4000000 		.4byte	.LFE17-.LFB17
 2171 0090 00000000 		.4byte	.LFB18
 2172 0094 90000000 		.4byte	.LFE18-.LFB18
 2173 0098 00000000 		.4byte	.LFB19
 2174 009c 80000000 		.4byte	.LFE19-.LFB19
 2175 00a0 00000000 		.4byte	0
 2176 00a4 00000000 		.4byte	0
 2177              		.section	.debug_ranges,"",%progbits
 2178              	.Ldebug_ranges0:
 2179 0000 00000000 		.4byte	.LFB2
 2180 0004 24000000 		.4byte	.LFE2
 2181 0008 00000000 		.4byte	.LFB3
 2182 000c C8010000 		.4byte	.LFE3
 2183 0010 00000000 		.4byte	.LFB4
 2184 0014 38000000 		.4byte	.LFE4
 2185 0018 00000000 		.4byte	.LFB5
 2186 001c 18000000 		.4byte	.LFE5
 2187 0020 00000000 		.4byte	.LFB6
 2188 0024 14000000 		.4byte	.LFE6
 2189 0028 00000000 		.4byte	.LFB7
 2190 002c 08000000 		.4byte	.LFE7
 2191 0030 00000000 		.4byte	.LFB8
 2192 0034 48000000 		.4byte	.LFE8
 2193 0038 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 55


 2194 003c 44000000 		.4byte	.LFE9
 2195 0040 00000000 		.4byte	.LFB10
 2196 0044 1C000000 		.4byte	.LFE10
 2197 0048 00000000 		.4byte	.LFB11
 2198 004c 30000000 		.4byte	.LFE11
 2199 0050 00000000 		.4byte	.LFB12
 2200 0054 2C000000 		.4byte	.LFE12
 2201 0058 00000000 		.4byte	.LFB13
 2202 005c 1C000000 		.4byte	.LFE13
 2203 0060 00000000 		.4byte	.LFB14
 2204 0064 1C000000 		.4byte	.LFE14
 2205 0068 00000000 		.4byte	.LFB15
 2206 006c 30000000 		.4byte	.LFE15
 2207 0070 00000000 		.4byte	.LFB16
 2208 0074 2C000000 		.4byte	.LFE16
 2209 0078 00000000 		.4byte	.LFB17
 2210 007c A4000000 		.4byte	.LFE17
 2211 0080 00000000 		.4byte	.LFB18
 2212 0084 90000000 		.4byte	.LFE18
 2213 0088 00000000 		.4byte	.LFB19
 2214 008c 80000000 		.4byte	.LFE19
 2215 0090 00000000 		.4byte	0
 2216 0094 00000000 		.4byte	0
 2217              		.section	.debug_line,"",%progbits
 2218              	.Ldebug_line0:
 2219 0000 9C020000 		.section	.debug_str,"MS",%progbits,1
 2219      02004A00 
 2219      00000201 
 2219      FB0E0D00 
 2219      01010101 
 2220              	.LASF19:
 2221 0000 72656733 		.ascii	"reg32\000"
 2221      3200
 2222              	.LASF59:
 2223 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2223      4320342E 
 2223      392E3320 
 2223      32303135 
 2223      30333033 
 2224 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2224      20726576 
 2224      6973696F 
 2224      6E203232 
 2224      31323230 
 2225 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2225      66756E63 
 2225      74696F6E 
 2225      2D736563 
 2225      74696F6E 
 2226              	.LASF45:
 2227 0094 6F666673 		.ascii	"offset\000"
 2227      657400
 2228              	.LASF48:
 2229 009b 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_mVolts\000"
 2229      5341525F 
 2229      5365715F 
 2229      436F756E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 56


 2229      7473546F 
 2230              	.LASF15:
 2231 00b7 666C6F61 		.ascii	"float\000"
 2231      7400
 2232              	.LASF41:
 2233 00bd 68696768 		.ascii	"highLimit\000"
 2233      4C696D69 
 2233      7400
 2234              	.LASF43:
 2235 00c7 4144435F 		.ascii	"ADC_SAR_Seq_SetSatMask\000"
 2235      5341525F 
 2235      5365715F 
 2235      53657453 
 2235      61744D61 
 2236              	.LASF52:
 2237 00de 75566F6C 		.ascii	"uVolts\000"
 2237      747300
 2238              	.LASF3:
 2239 00e5 73686F72 		.ascii	"short unsigned int\000"
 2239      7420756E 
 2239      7369676E 
 2239      65642069 
 2239      6E7400
 2240              	.LASF2:
 2241 00f8 73686F72 		.ascii	"short int\000"
 2241      7420696E 
 2241      7400
 2242              	.LASF40:
 2243 0102 4144435F 		.ascii	"ADC_SAR_Seq_SetHighLimit\000"
 2243      5341525F 
 2243      5365715F 
 2243      53657448 
 2243      6967684C 
 2244              	.LASF28:
 2245 011b 4144435F 		.ascii	"ADC_SAR_Seq_StopConvert\000"
 2245      5341525F 
 2245      5365715F 
 2245      53746F70 
 2245      436F6E76 
 2246              	.LASF29:
 2247 0133 73746174 		.ascii	"status\000"
 2247      757300
 2248              	.LASF60:
 2249 013a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq.c\000"
 2249      6E657261 
 2249      7465645F 
 2249      536F7572 
 2249      63655C50 
 2250              	.LASF14:
 2251 0161 666C6F61 		.ascii	"float32\000"
 2251      74333200 
 2252              	.LASF25:
 2253 0169 4144435F 		.ascii	"ADC_SAR_Seq_Enable\000"
 2253      5341525F 
 2253      5365715F 
 2253      456E6162 
 2253      6C6500
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 57


 2254              	.LASF22:
 2255 017c 746D7052 		.ascii	"tmpRegVal\000"
 2255      65675661 
 2255      6C00
 2256              	.LASF26:
 2257 0186 4144435F 		.ascii	"ADC_SAR_Seq_Stop\000"
 2257      5341525F 
 2257      5365715F 
 2257      53746F70 
 2257      00
 2258              	.LASF30:
 2259 0197 4144435F 		.ascii	"ADC_SAR_Seq_IsEndConversion\000"
 2259      5341525F 
 2259      5365715F 
 2259      4973456E 
 2259      64436F6E 
 2260              	.LASF12:
 2261 01b3 696E7431 		.ascii	"int16\000"
 2261      3600
 2262              	.LASF5:
 2263 01b9 6C6F6E67 		.ascii	"long unsigned int\000"
 2263      20756E73 
 2263      69676E65 
 2263      6420696E 
 2263      7400
 2264              	.LASF13:
 2265 01cb 696E7433 		.ascii	"int32\000"
 2265      3200
 2266              	.LASF42:
 2267 01d1 4144435F 		.ascii	"ADC_SAR_Seq_SetLimitMask\000"
 2267      5341525F 
 2267      5365715F 
 2267      5365744C 
 2267      696D6974 
 2268              	.LASF1:
 2269 01ea 756E7369 		.ascii	"unsigned char\000"
 2269      676E6564 
 2269      20636861 
 2269      7200
 2270              	.LASF16:
 2271 01f8 646F7562 		.ascii	"double\000"
 2271      6C6500
 2272              	.LASF39:
 2273 01ff 6C6F774C 		.ascii	"lowLimit\000"
 2273      696D6974 
 2273      00
 2274              	.LASF47:
 2275 0208 61646347 		.ascii	"adcGain\000"
 2275      61696E00 
 2276              	.LASF10:
 2277 0210 75696E74 		.ascii	"uint16\000"
 2277      313600
 2278              	.LASF49:
 2279 0217 61646343 		.ascii	"adcCounts\000"
 2279      6F756E74 
 2279      7300
 2280              	.LASF11:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 58


 2281 0221 75696E74 		.ascii	"uint32\000"
 2281      333200
 2282              	.LASF31:
 2283 0228 4144435F 		.ascii	"ADC_SAR_Seq_GetResult16\000"
 2283      5341525F 
 2283      5365715F 
 2283      47657452 
 2283      6573756C 
 2284              	.LASF58:
 2285 0240 4144435F 		.ascii	"ADC_SAR_Seq_countsPer10Volt\000"
 2285      5341525F 
 2285      5365715F 
 2285      636F756E 
 2285      74735065 
 2286              	.LASF27:
 2287 025c 4144435F 		.ascii	"ADC_SAR_Seq_StartConvert\000"
 2287      5341525F 
 2287      5365715F 
 2287      53746172 
 2287      74436F6E 
 2288              	.LASF8:
 2289 0275 756E7369 		.ascii	"unsigned int\000"
 2289      676E6564 
 2289      20696E74 
 2289      00
 2290              	.LASF56:
 2291 0282 4144435F 		.ascii	"ADC_SAR_Seq_initVar\000"
 2291      5341525F 
 2291      5365715F 
 2291      696E6974 
 2291      56617200 
 2292              	.LASF23:
 2293 0296 636F756E 		.ascii	"counts\000"
 2293      747300
 2294              	.LASF7:
 2295 029d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2295      206C6F6E 
 2295      6720756E 
 2295      7369676E 
 2295      65642069 
 2296              	.LASF24:
 2297 02b4 4144435F 		.ascii	"ADC_SAR_Seq_Start\000"
 2297      5341525F 
 2297      5365715F 
 2297      53746172 
 2297      7400
 2298              	.LASF61:
 2299 02c6 453A5C53 		.ascii	"E:\\SD\\CYP\\BLE_KEY\\Design02.cydsn\000"
 2299      445C4359 
 2299      505C424C 
 2299      455F4B45 
 2299      595C4465 
 2300              	.LASF51:
 2301 02e7 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_uVolts\000"
 2301      5341525F 
 2301      5365715F 
 2301      436F756E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 59


 2301      7473546F 
 2302              	.LASF54:
 2303 0303 766F6C74 		.ascii	"volts\000"
 2303      7300
 2304              	.LASF33:
 2305 0309 6368616E 		.ascii	"chan\000"
 2305      00
 2306              	.LASF50:
 2307 030e 6D566F6C 		.ascii	"mVolts\000"
 2307      747300
 2308              	.LASF55:
 2309 0315 4144435F 		.ascii	"ADC_SAR_Seq_channelsConfig\000"
 2309      5341525F 
 2309      5365715F 
 2309      6368616E 
 2309      6E656C73 
 2310              	.LASF20:
 2311 0330 73697A65 		.ascii	"sizetype\000"
 2311      74797065 
 2311      00
 2312              	.LASF6:
 2313 0339 6C6F6E67 		.ascii	"long long int\000"
 2313      206C6F6E 
 2313      6720696E 
 2313      7400
 2314              	.LASF37:
 2315 0347 6D61736B 		.ascii	"mask\000"
 2315      00
 2316              	.LASF21:
 2317 034c 63684E75 		.ascii	"chNum\000"
 2317      6D00
 2318              	.LASF44:
 2319 0352 4144435F 		.ascii	"ADC_SAR_Seq_SetOffset\000"
 2319      5341525F 
 2319      5365715F 
 2319      5365744F 
 2319      66667365 
 2320              	.LASF53:
 2321 0368 4144435F 		.ascii	"ADC_SAR_Seq_CountsTo_Volts\000"
 2321      5341525F 
 2321      5365715F 
 2321      436F756E 
 2321      7473546F 
 2322              	.LASF32:
 2323 0383 7265744D 		.ascii	"retMode\000"
 2323      6F646500 
 2324              	.LASF36:
 2325 038b 4144435F 		.ascii	"ADC_SAR_Seq_SetChanMask\000"
 2325      5341525F 
 2325      5365715F 
 2325      53657443 
 2325      68616E4D 
 2326              	.LASF9:
 2327 03a3 75696E74 		.ascii	"uint8\000"
 2327      3800
 2328              	.LASF4:
 2329 03a9 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccSOxefd.s 			page 60


 2329      20696E74 
 2329      00
 2330              	.LASF18:
 2331 03b2 63686172 		.ascii	"char\000"
 2331      00
 2332              	.LASF0:
 2333 03b7 7369676E 		.ascii	"signed char\000"
 2333      65642063 
 2333      68617200 
 2334              	.LASF57:
 2335 03c3 4144435F 		.ascii	"ADC_SAR_Seq_offset\000"
 2335      5341525F 
 2335      5365715F 
 2335      6F666673 
 2335      657400
 2336              	.LASF46:
 2337 03d6 4144435F 		.ascii	"ADC_SAR_Seq_SetGain\000"
 2337      5341525F 
 2337      5365715F 
 2337      53657447 
 2337      61696E00 
 2338              	.LASF34:
 2339 03ea 72657375 		.ascii	"result\000"
 2339      6C7400
 2340              	.LASF35:
 2341 03f1 4144435F 		.ascii	"ADC_SAR_Seq_Init\000"
 2341      5341525F 
 2341      5365715F 
 2341      496E6974 
 2341      00
 2342              	.LASF17:
 2343 0402 696E7436 		.ascii	"int64\000"
 2343      3400
 2344              	.LASF38:
 2345 0408 4144435F 		.ascii	"ADC_SAR_Seq_SetLowLimit\000"
 2345      5341525F 
 2345      5365715F 
 2345      5365744C 
 2345      6F774C69 
 2346              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
